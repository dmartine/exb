define(["jimu-arcgis","jimu-core","jimu-for-builder","jimu-ui","jimu-ui/setting-components"], function(__WEBPACK_EXTERNAL_MODULE_jimu_arcgis__, __WEBPACK_EXTERNAL_MODULE_jimu_core__, __WEBPACK_EXTERNAL_MODULE_jimu_for_builder__, __WEBPACK_EXTERNAL_MODULE_jimu_ui__, __WEBPACK_EXTERNAL_MODULE_jimu_ui_setting_components__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./your-extensions/widgets/survey/src/setting/setting.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./jimu-ui/lib/icons/close-24.svg":
/*!****************************************!*\
  !*** ./jimu-ui/lib/icons/close-24.svg ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<svg viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M13.462 12l10.235 10.235a1.034 1.034 0 11-1.462 1.462L12 13.462 1.765 23.697a1.034 1.034 0 11-1.462-1.462L10.538 12 .303 1.765A1.034 1.034 0 111.765.303L12 10.538 22.235.303a1.034 1.034 0 111.462 1.462L13.462 12z\\\" fill=\\\"#000\\\" fill-rule=\\\"nonzero\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qaW11LXVpL2xpYi9pY29ucy9jbG9zZS0yNC5zdmcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qaW11LXVpL2xpYi9pY29ucy9jbG9zZS0yNC5zdmc/MjkzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Qm94PVxcXCIwIDAgMjQgMjRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCI+PHBhdGggZD1cXFwiTTEzLjQ2MiAxMmwxMC4yMzUgMTAuMjM1YTEuMDM0IDEuMDM0IDAgMTEtMS40NjIgMS40NjJMMTIgMTMuNDYyIDEuNzY1IDIzLjY5N2ExLjAzNCAxLjAzNCAwIDExLTEuNDYyLTEuNDYyTDEwLjUzOCAxMiAuMzAzIDEuNzY1QTEuMDM0IDEuMDM0IDAgMTExLjc2NS4zMDNMMTIgMTAuNTM4IDIyLjIzNS4zMDNhMS4wMzQgMS4wMzQgMCAxMTEuNDYyIDEuNDYyTDEzLjQ2MiAxMnpcXFwiIGZpbGw9XFxcIiMwMDBcXFwiIGZpbGwtcnVsZT1cXFwibm9uemVyb1xcXCI+PC9wYXRoPjwvc3ZnPlwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./jimu-ui/lib/icons/close-24.svg\n");

/***/ }),

/***/ "./jimu-ui/lib/icons/close.svg":
/*!*************************************!*\
  !*** ./jimu-ui/lib/icons/close.svg ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 32 32\\\"><path d=\\\"M19.637 15.866L30.951 27.18a2.667 2.667 0 01-3.771 3.771L15.866 19.637 4.552 30.951A2.667 2.667 0 01.781 27.18l11.314-11.314L.781 4.552A2.667 2.667 0 014.552.781l11.314 11.314L27.18.781a2.667 2.667 0 013.771 3.771L19.637 15.866z\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qaW11LXVpL2xpYi9pY29ucy9jbG9zZS5zdmcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qaW11LXVpL2xpYi9pY29ucy9jbG9zZS5zdmc/MGRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCI+PHBhdGggZD1cXFwiTTE5LjYzNyAxNS44NjZMMzAuOTUxIDI3LjE4YTIuNjY3IDIuNjY3IDAgMDEtMy43NzEgMy43NzFMMTUuODY2IDE5LjYzNyA0LjU1MiAzMC45NTFBMi42NjcgMi42NjcgMCAwMS43ODEgMjcuMThsMTEuMzE0LTExLjMxNEwuNzgxIDQuNTUyQTIuNjY3IDIuNjY3IDAgMDE0LjU1Mi43ODFsMTEuMzE0IDExLjMxNEwyNy4xOC43ODFhMi42NjcgMi42NjcgMCAwMTMuNzcxIDMuNzcxTDE5LjYzNyAxNS44NjZ6XFxcIj48L3BhdGg+PC9zdmc+XCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./jimu-ui/lib/icons/close.svg\n");

/***/ }),

/***/ "./jimu-ui/lib/icons/delete.svg":
/*!**************************************!*\
  !*** ./jimu-ui/lib/icons/delete.svg ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 32 32\\\"><path d=\\\"M2.561 7.876l1.138 20.023C3.699 30.164 5.83 32 8.459 32h15.724c2.629 0 4.76-1.836 4.76-4.101l1.095-20.023H2.562zm28.806-1.42c.005-.844.008-.901.008-.957 0-2.202-1.483-3.411-3.472-3.411l-5.537.005C22.366.937 21.082 0 19.768 0h-6.893c-1.314 0-2.64.937-2.64 2.093l-5.543-.005c-2.197 0-3.472 1.473-3.472 3.411 0 .057.003.113.008.957h30.139zm-10.306 6.682c0-.638.588-1.156 1.314-1.156s1.314.517 1.314 1.156v13.24c0 .638-.588 1.156-1.314 1.156s-1.314-.517-1.314-1.156v-13.24zm-6.077 0c0-.638.589-1.156 1.315-1.156s1.314.517 1.314 1.156v13.24c0 .638-.588 1.156-1.314 1.156s-1.315-.517-1.315-1.156v-13.24zm-6.074 0c0-.638.588-1.156 1.315-1.156s1.314.517 1.314 1.156v13.24c0 .638-.589 1.156-1.314 1.156s-1.315-.517-1.315-1.156v-13.24z\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qaW11LXVpL2xpYi9pY29ucy9kZWxldGUuc3ZnLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vamltdS11aS9saWIvaWNvbnMvZGVsZXRlLnN2Zz9mYTg1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIj48cGF0aCBkPVxcXCJNMi41NjEgNy44NzZsMS4xMzggMjAuMDIzQzMuNjk5IDMwLjE2NCA1LjgzIDMyIDguNDU5IDMyaDE1LjcyNGMyLjYyOSAwIDQuNzYtMS44MzYgNC43Ni00LjEwMWwxLjA5NS0yMC4wMjNIMi41NjJ6bTI4LjgwNi0xLjQyYy4wMDUtLjg0NC4wMDgtLjkwMS4wMDgtLjk1NyAwLTIuMjAyLTEuNDgzLTMuNDExLTMuNDcyLTMuNDExbC01LjUzNy4wMDVDMjIuMzY2LjkzNyAyMS4wODIgMCAxOS43NjggMGgtNi44OTNjLTEuMzE0IDAtMi42NC45MzctMi42NCAyLjA5M2wtNS41NDMtLjAwNWMtMi4xOTcgMC0zLjQ3MiAxLjQ3My0zLjQ3MiAzLjQxMSAwIC4wNTcuMDAzLjExMy4wMDguOTU3aDMwLjEzOXptLTEwLjMwNiA2LjY4MmMwLS42MzguNTg4LTEuMTU2IDEuMzE0LTEuMTU2czEuMzE0LjUxNyAxLjMxNCAxLjE1NnYxMy4yNGMwIC42MzgtLjU4OCAxLjE1Ni0xLjMxNCAxLjE1NnMtMS4zMTQtLjUxNy0xLjMxNC0xLjE1NnYtMTMuMjR6bS02LjA3NyAwYzAtLjYzOC41ODktMS4xNTYgMS4zMTUtMS4xNTZzMS4zMTQuNTE3IDEuMzE0IDEuMTU2djEzLjI0YzAgLjYzOC0uNTg4IDEuMTU2LTEuMzE0IDEuMTU2cy0xLjMxNS0uNTE3LTEuMzE1LTEuMTU2di0xMy4yNHptLTYuMDc0IDBjMC0uNjM4LjU4OC0xLjE1NiAxLjMxNS0xLjE1NnMxLjMxNC41MTcgMS4zMTQgMS4xNTZ2MTMuMjRjMCAuNjM4LS41ODkgMS4xNTYtMS4zMTQgMS4xNTZzLTEuMzE1LS41MTctMS4zMTUtMS4xNTZ2LTEzLjI0elxcXCI+PC9wYXRoPjwvc3ZnPlwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./jimu-ui/lib/icons/delete.svg\n");

/***/ }),

/***/ "./jimu-ui/lib/icons/link.svg":
/*!************************************!*\
  !*** ./jimu-ui/lib/icons/link.svg ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 45 32\\\"><path d=\\\"M19.6 26.267a2.8 2.8 0 01-2.8 2.8h-3.733C5.85 29.067 0 23.217 0 16S5.85 2.933 13.067 2.933H16.8a2.8 2.8 0 010 5.6h-3.733a7.467 7.467 0 100 14.934H16.8a2.8 2.8 0 012.8 2.8zm8.4-2.8h3.733a7.467 7.467 0 100-14.934H28a2.8 2.8 0 010-5.6h3.733C38.95 2.933 44.8 8.783 44.8 16s-5.85 13.067-13.067 13.067H28a2.8 2.8 0 010-5.6zM15.867 13.2h13.067a2.8 2.8 0 010 5.6H15.867a2.8 2.8 0 010-5.6z\\\"></path></svg>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qaW11LXVpL2xpYi9pY29ucy9saW5rLnN2Zy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2ppbXUtdWkvbGliL2ljb25zL2xpbmsuc3ZnP2JlMTAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB2aWV3Qm94PVxcXCIwIDAgNDUgMzJcXFwiPjxwYXRoIGQ9XFxcIk0xOS42IDI2LjI2N2EyLjggMi44IDAgMDEtMi44IDIuOGgtMy43MzNDNS44NSAyOS4wNjcgMCAyMy4yMTcgMCAxNlM1Ljg1IDIuOTMzIDEzLjA2NyAyLjkzM0gxNi44YTIuOCAyLjggMCAwMTAgNS42aC0zLjczM2E3LjQ2NyA3LjQ2NyAwIDEwMCAxNC45MzRIMTYuOGEyLjggMi44IDAgMDEyLjggMi44em04LjQtMi44aDMuNzMzYTcuNDY3IDcuNDY3IDAgMTAwLTE0LjkzNEgyOGEyLjggMi44IDAgMDEwLTUuNmgzLjczM0MzOC45NSAyLjkzMyA0NC44IDguNzgzIDQ0LjggMTZzLTUuODUgMTMuMDY3LTEzLjA2NyAxMy4wNjdIMjhhMi44IDIuOCAwIDAxMC01LjZ6TTE1Ljg2NyAxMy4yaDEzLjA2N2EyLjggMi44IDAgMDEwIDUuNkgxNS44NjdhMi44IDIuOCAwIDAxMC01LjZ6XFxcIj48L3BhdGg+PC9zdmc+XCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./jimu-ui/lib/icons/link.svg\n");

/***/ }),

/***/ "./your-extensions/widgets/survey/src/service/survey123.service.ts":
/*!*************************************************************************!*\
  !*** ./your-extensions/widgets/survey/src/service/survey123.service.ts ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * survey123 service\n */\nvar Survey123Service = /** @class */ (function () {\n    function Survey123Service() {\n    }\n    /**\n     * get survey123 host url\n     */\n    Survey123Service.prototype.getSurvey123HostUrl = function () {\n        /**\n         * Beijing-R-D-Center/ExperienceBuilder/issues/88\n         * we need to check url host to see which survey123 host url we will use\n         * wabbuild.esri.com > survey123dec.arcgis.com\n         * experiencedev.arcgis.com > survey123dev.arcgis.com\n         * experienceqa.arcgis.com > survey123qa.arcgis.com\n         * experience.arcgis.com > survey123.arcgis.com\n         * default > survey123.arcgis.com\n         *\n         */\n        var url = 'https://survey123.arcgis.com';\n        // dev\n        if (window.hostEnv === 'dev') {\n            url = 'https://survey123dev.arcgis.com';\n        }\n        // qa\n        if (window.hostEnv === 'qa') {\n            url = 'https://survey123qa.arcgis.com';\n        }\n        return url;\n    };\n    /**\n    * get the api url\n    */\n    Survey123Service.prototype.getSurvey123HostAPIUrl = function () {\n        var url = this.getSurvey123HostUrl() + '/api/jsapi'; //  '/share/survey123webform-jsapi.js';\n        // only for debugger locally\n        // const isDebug: boolean = false;\n        // if (isDebug) {\n        //   url = `https://nanzhang.arcgis.com:8443/webclient/survey123webform-jsapi.js`;\n        // }\n        return url;\n    };\n    /**\n     * create survey by survey123 rest api\n     * @param title\n     * @param tags\n     * @param options\n     */\n    Survey123Service.prototype.createSurvey = function (title, tags, commonParams, options) {\n        var _this = this;\n        // options\n        options = Object.assign({\n            snippet: ''\n        }, options || {});\n        return Promise.resolve(true)\n            .then(function () {\n            if (!title || !tags || !commonParams || !commonParams.token || !commonParams.username) {\n                throw new Error('missing title, tags, username or token');\n            }\n        })\n            .then(function () {\n            var url = _this.getSurvey123HostUrl() + \"/api/survey/create\";\n            var params = {\n                title: title,\n                tags: tags.join(','),\n                snippet: options.snippet,\n                thumbnailUrl: options.thumbnailUrl,\n                token: commonParams.token,\n                username: commonParams.username,\n                portalUrl: commonParams.portalUrl || 'https://www.arcgis.com'\n            };\n            return fetch(url, {\n                mode: 'cors',\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                },\n                body: JSON.stringify(params)\n            })\n                .then(function (res) {\n                if (res.ok) {\n                    return res.json();\n                }\n                throw res;\n            });\n        });\n    };\n    /**\n     * query survey\n     * @param commonParams\n     * @param options\n     */\n    Survey123Service.prototype.querySurvey = function (commonParams, options) {\n        var _this = this;\n        // options\n        options = Object.assign({\n            isShared: false,\n            isPublished: true\n        }, options || {});\n        return Promise.resolve(true)\n            .then(function () {\n            if (!commonParams || !commonParams.token || !commonParams.username) {\n                throw new Error('missing token or username');\n            }\n        })\n            .then(function () {\n            var url = _this.getSurvey123HostUrl() + \"/api/survey/query\";\n            var params = {\n                isShared: options.isShared,\n                isPublished: options.isPublished,\n                token: commonParams.token,\n                username: commonParams.username,\n                portalUrl: commonParams.portalUrl || 'https://www.arcgis.com'\n            };\n            url = url + \"?\" + Object.keys(params).map(function (k) { return k + '=' + params[k]; }).join('&');\n            return fetch(url, {\n                mode: 'cors',\n                method: 'GET'\n            })\n                .then(function (res) {\n                if (res.ok) {\n                    return res.json();\n                }\n                throw res;\n            });\n        });\n    };\n    /**\n     * get survey123 designer url\n     */\n    Survey123Service.prototype.getSurvey123DesignerUrl = function (surveyItemId, options) {\n        // options\n        options = Object.assign({}, options || {});\n        var url = this.getSurvey123HostUrl() + \"/surveys/\" + surveyItemId + \"/design?embed=exb\";\n        if (options.portalUrl && options.portalUrl !== 'https://www.arcgis.com') {\n            url += \"&portalUrl=\" + options.portalUrl;\n        }\n        if (this.getSurvey123HostUrl() === 'https://survey123dev.arcgis.com' && !options.portalUrl || (options.portalUrl === 'https://www.arcgis.com')) {\n            url += \"&portalUrl=\" + options.portalUrl;\n        }\n        return url;\n    };\n    /**\n     *\n     * @param surveyItemId\n     * @param options\n     */\n    Survey123Service.prototype.getSurvey123WebformUrl = function (surveyItemId, options) {\n        // options\n        options = Object.assign({\n            queryParams: []\n        }, options || {});\n        var isDebug = false;\n        var url = this.getSurvey123HostUrl() + \"/share/\" + surveyItemId;\n        /**\n         * debugg only\n         */\n        if (isDebug) {\n            url = \"https://nanzhang.arcgis.com:8443/webclient/?appid=\" + surveyItemId;\n        }\n        if (options.queryParams.length > 0) {\n            url += \"\" + ((isDebug) ? '&' : '?') + options.queryParams.join('&');\n        }\n        return url;\n    };\n    /**\n     * get survey question fields\n     * @param surveyItemId\n     * @param commonParams\n     */\n    Survey123Service.prototype.getSurveyQuestionFields = function (surveyItemId, commonParams) {\n        var _this = this;\n        return Promise.resolve(true)\n            .then(function () {\n            if (!surveyItemId || !commonParams || !commonParams.token) {\n                throw new Error('missing surveyItemId or token');\n            }\n        })\n            .then(function () {\n            var url = _this.getSurvey123HostUrl() + \"/api/survey/\" + surveyItemId + \"/form\";\n            var params = {\n                token: commonParams.token\n            };\n            url = url + \"?\" + Object.keys(params).map(function (k) { return k + '=' + params[k]; }).join('&');\n            return fetch(url, {\n                mode: 'cors',\n                method: 'GET'\n            })\n                .then(function (res) {\n                if (res.ok) {\n                    return res.json();\n                }\n                throw res;\n            });\n        })\n            .then(function (res) {\n            var results = [];\n            if (res && res.questions && res.questions.length > 0) {\n                res.questions.forEach(function (q) {\n                    var shortType = (q.type + '').replace('esriQuestionType', '');\n                    if (q.fieldName || ['geopoint', 'polyline', 'polygon'].indexOf(shortType.toLowerCase()) >= 0) {\n                        results.push({\n                            name: q.fieldName || q.name,\n                            label: q.label\n                        });\n                    }\n                });\n            }\n            return results;\n        });\n    };\n    return Survey123Service;\n}());\nexports.Survey123Service = Survey123Service;\nexports.survey123Service = new Survey123Service();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./your-extensions/widgets/survey/src/service/survey123.service.ts\n");

/***/ }),

/***/ "./your-extensions/widgets/survey/src/setting/css/style.ts":
/*!*****************************************************************!*\
  !*** ./your-extensions/widgets/survey/src/setting/css/style.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar jimu_core_1 = __webpack_require__(/*! jimu-core */ \"jimu-core\");\nfunction getStyle(theme) {\n    return jimu_core_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    &.survey123{\\n        .survey123__section {\\n\\n            input + span {\\n              // margin-left:5px; \\n            }\\n            .jimu-widget-setting--section-header.row >h6 {\\n              font-size: 0.875rem;\\n              color: \", \";\\n            }\\n\\n            .survey-list-msg {\\n              padding: 0 5px;\\n            }\\n            .survey-list-loading-outter {\\n              position: relative;\\n              top: -18px;\\n            }\\n            .survey123__section-createSurvey, .select-survey-section {\\n              .error-message {\\n                color: \", \";\\n              }\\n            }\\n            .select-survey-section {\\n              hr.split-line {\\n                display: none;\\n              }\\n            }\\n            .create-survey-container {\\n              .jimu-widget-setting--row.items {\\n                margin-top: 1.2rem;\\n                display: block;\\n                h6 {\\n                  color: \", \";\\n                }\\n                div.w-100 {\\n                  font-size: 0.8125rem;\\n                  line-height: 1.1875rem;\\n                  margin-top: 0.3125rem;\\n\\n                }\\n              }\\n              .jimu-widget-setting--row >label {\\n                font-size: 0.875rem;\\n                font-weight: 400;\\n                +p.w-100 {\\n                  font-size: 0.8125rem;\\n                  line-height: 1.1875rem;\\n                  margin-top: 0.3125rem;\\n                }\\n              }\\n            }\\n        \\n            .appearance, .section-title {\\n              display: flex;\\n              justify-content: space-between;\\n              width:100%;\\n              h6 {\\n                margin-bottom: 0;\\n              }\\n            }\\n\\n            .select{\\n              select {\\n                width: 100%;\\n              }\\n            }\\n\\n            .mapping-container {\\n              padding: 0.615em;\\n              background: \", \";\\n              border-radius: 2px;\\n              margin: 0.6em 0;\\n              position: relative;\\n              button:disabled, button[disabled] {\\n                background:  #555555;\\n              }\\n              >select {\\n                height: 26px;\\n                vertical-align: middle;\\n                font-size: 1em;\\n                line-height: 26px;\\n                padding: 0 22px 0 6px;\\n                &:first-of-type {\\n                  margin-bottom: 8px;\\n                }\\n              }\\n              .btn-group {\\n                width: 100%;\\n                overflow: hidden;\\n                .icon-remove-mapping {\\n                  padding: 0 0.25em;\\n                  margin-left: 0;\\n                  margin-right: 0;\\n                  svg.left-icon {\\n                    margin-right: 0;\\n                    margin-left: 0;\\n                  }\\n                }\\n                button {\\n                  margin: 8px 0 8px 8px;\\n                  height: 26px;\\n                  line-height: 26px;\\n                  padding: 0;\\n                }\\n              }\\n              >.link-info {\\n                > p {\\n                  margin-bottom: 0;\\n                  line-height: 2em;\\n                }\\n                > div.center-line {\\n                  width: 96%;\\n                  height: 1px;\\n                  background: \", \";\\n                  text-align: center;\\n                  margin: 0.5em 2% 0.5em 2%;\\n                  >.connect {\\n                    display: inline-block;\\n                    width: 26px;\\n                    height: 20px;\\n                    background: \", \";\\n                    position: relative;\\n                    top: -10px;\\n                  }\\n                }\\n                > div.delete-connect {\\n                  display: none;\\n                  position: absolute;\\n                  right: 0;\\n                  top: 0;\\n                  cursor: pointer;\\n                  background: \", \";\\n                  text-align: center;\\n                  width: 24px;\\n                  height: 24px;\\n                }\\n                &:hover > div.delete-connect {\\n                  display: block;\\n                }\\n              }\\n              \\n            }\\n\\n            .setting-row {\\n              margin: 0.5rem 0 0 0;\\n              display: flex;\\n              flex-flow: row wrap;\\n              align-items: center;\\n            }\\n        \\n            .section-title h5{\\n              display: inline-block;\\n              font-weight: 500;\\n            }\\n            .fea-layer-outter {\\n              flex-wrap:wrap;\\n            }\\n\\n            .use-feature-layer-setting {\\n              width: 100%;\\n              margin-top: 0.92em;\\n            }\\n            .feature-layer-dropdown {\\n              width: 100%;\\n              margin: 0.5rem 0 0 0;\\n            }\\n            &-resetSurvey {\\n              position:relative;\\n              // top: -8px;\\n              height: 26px;\\n              float:right;\\n              line-height: 8px;\\n\\n              svg {\\n                margin:0px !important;\\n              }\\n            }\\n\\n            .cursor-pointer{\\n              &:hover{\\n                cursor:pointer;\\n              }\\n            }\\n              \\n            &-surveyMenu {}\\n        \\n            &-selectExistingSurvey {}\\n        \\n            &-createSurvey {\\n              overflow-y: hidden;\\n              \\n              span.isRequired{\\n                position:relative;\\n                /* left:-180px; */\\n                color: \", \";\\n                top: 4px;\\n                left: 4px;\\n              }\\n              input {\\n                margin-top: 0.5em;\\n              }\\n            }\\n        \\n            &-surveySettings {\\n              \\n            }\\n          }\\n    }\\n  \"], [\"\\n    &.survey123{\\n        .survey123__section {\\n\\n            input + span {\\n              // margin-left:5px; \\n            }\\n            .jimu-widget-setting--section-header.row >h6 {\\n              font-size: 0.875rem;\\n              color: \", \";\\n            }\\n\\n            .survey-list-msg {\\n              padding: 0 5px;\\n            }\\n            .survey-list-loading-outter {\\n              position: relative;\\n              top: -18px;\\n            }\\n            .survey123__section-createSurvey, .select-survey-section {\\n              .error-message {\\n                color: \", \";\\n              }\\n            }\\n            .select-survey-section {\\n              hr.split-line {\\n                display: none;\\n              }\\n            }\\n            .create-survey-container {\\n              .jimu-widget-setting--row.items {\\n                margin-top: 1.2rem;\\n                display: block;\\n                h6 {\\n                  color: \", \";\\n                }\\n                div.w-100 {\\n                  font-size: 0.8125rem;\\n                  line-height: 1.1875rem;\\n                  margin-top: 0.3125rem;\\n\\n                }\\n              }\\n              .jimu-widget-setting--row >label {\\n                font-size: 0.875rem;\\n                font-weight: 400;\\n                +p.w-100 {\\n                  font-size: 0.8125rem;\\n                  line-height: 1.1875rem;\\n                  margin-top: 0.3125rem;\\n                }\\n              }\\n            }\\n        \\n            .appearance, .section-title {\\n              display: flex;\\n              justify-content: space-between;\\n              width:100%;\\n              h6 {\\n                margin-bottom: 0;\\n              }\\n            }\\n\\n            .select{\\n              select {\\n                width: 100%;\\n              }\\n            }\\n\\n            .mapping-container {\\n              padding: 0.615em;\\n              background: \", \";\\n              border-radius: 2px;\\n              margin: 0.6em 0;\\n              position: relative;\\n              button:disabled, button[disabled] {\\n                background:  #555555;\\n              }\\n              >select {\\n                height: 26px;\\n                vertical-align: middle;\\n                font-size: 1em;\\n                line-height: 26px;\\n                padding: 0 22px 0 6px;\\n                &:first-of-type {\\n                  margin-bottom: 8px;\\n                }\\n              }\\n              .btn-group {\\n                width: 100%;\\n                overflow: hidden;\\n                .icon-remove-mapping {\\n                  padding: 0 0.25em;\\n                  margin-left: 0;\\n                  margin-right: 0;\\n                  svg.left-icon {\\n                    margin-right: 0;\\n                    margin-left: 0;\\n                  }\\n                }\\n                button {\\n                  margin: 8px 0 8px 8px;\\n                  height: 26px;\\n                  line-height: 26px;\\n                  padding: 0;\\n                }\\n              }\\n              >.link-info {\\n                > p {\\n                  margin-bottom: 0;\\n                  line-height: 2em;\\n                }\\n                > div.center-line {\\n                  width: 96%;\\n                  height: 1px;\\n                  background: \", \";\\n                  text-align: center;\\n                  margin: 0.5em 2% 0.5em 2%;\\n                  >.connect {\\n                    display: inline-block;\\n                    width: 26px;\\n                    height: 20px;\\n                    background: \", \";\\n                    position: relative;\\n                    top: -10px;\\n                  }\\n                }\\n                > div.delete-connect {\\n                  display: none;\\n                  position: absolute;\\n                  right: 0;\\n                  top: 0;\\n                  cursor: pointer;\\n                  background: \", \";\\n                  text-align: center;\\n                  width: 24px;\\n                  height: 24px;\\n                }\\n                &:hover > div.delete-connect {\\n                  display: block;\\n                }\\n              }\\n              \\n            }\\n\\n            .setting-row {\\n              margin: 0.5rem 0 0 0;\\n              display: flex;\\n              flex-flow: row wrap;\\n              align-items: center;\\n            }\\n        \\n            .section-title h5{\\n              display: inline-block;\\n              font-weight: 500;\\n            }\\n            .fea-layer-outter {\\n              flex-wrap:wrap;\\n            }\\n\\n            .use-feature-layer-setting {\\n              width: 100%;\\n              margin-top: 0.92em;\\n            }\\n            .feature-layer-dropdown {\\n              width: 100%;\\n              margin: 0.5rem 0 0 0;\\n            }\\n            &-resetSurvey {\\n              position:relative;\\n              // top: -8px;\\n              height: 26px;\\n              float:right;\\n              line-height: 8px;\\n\\n              svg {\\n                margin:0px !important;\\n              }\\n            }\\n\\n            .cursor-pointer{\\n              &:hover{\\n                cursor:pointer;\\n              }\\n            }\\n              \\n            &-surveyMenu {}\\n        \\n            &-selectExistingSurvey {}\\n        \\n            &-createSurvey {\\n              overflow-y: hidden;\\n              \\n              span.isRequired{\\n                position:relative;\\n                /* left:-180px; */\\n                color: \", \";\\n                top: 4px;\\n                left: 4px;\\n              }\\n              input {\\n                margin-top: 0.5em;\\n              }\\n            }\\n        \\n            &-surveySettings {\\n              \\n            }\\n          }\\n    }\\n  \"])), theme.colors.palette.dark[600], theme.colors.danger, theme.colors.palette.dark[500], theme.colors.secondary, theme.colors.palette.secondary[800], theme.colors.secondary, theme.colors.palette.secondary[400], theme.colors.danger);\n}\nexports.getStyle = getStyle;\nvar templateObject_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./your-extensions/widgets/survey/src/setting/css/style.ts\n");

/***/ }),

/***/ "./your-extensions/widgets/survey/src/setting/setting.tsx":
/*!****************************************************************!*\
  !*** ./your-extensions/widgets/survey/src/setting/setting.tsx ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @jsx jsx */\nvar jimu_core_1 = __webpack_require__(/*! jimu-core */ \"jimu-core\");\nvar jimu_for_builder_1 = __webpack_require__(/*! jimu-for-builder */ \"jimu-for-builder\");\nvar setting_components_1 = __webpack_require__(/*! jimu-ui/setting-components */ \"jimu-ui/setting-components\");\nvar jimu_arcgis_1 = __webpack_require__(/*! jimu-arcgis */ \"jimu-arcgis\");\nvar jimu_ui_1 = __webpack_require__(/*! jimu-ui */ \"jimu-ui\");\nvar survey123_service_1 = __webpack_require__(/*! ../service/survey123.service */ \"./your-extensions/widgets/survey/src/service/survey123.service.ts\");\nvar default_1 = __webpack_require__(/*! ./translations/default */ \"./your-extensions/widgets/survey/src/setting/translations/default.ts\");\nvar style_1 = __webpack_require__(/*! ./css/style */ \"./your-extensions/widgets/survey/src/setting/css/style.ts\");\nvar Setting = /** @class */ (function (_super) {\n    __extends(Setting, _super);\n    // private _survey123HostUrl: string = survey123Service.getSurvey123HostUrl();\n    // private _dsManager = DataSourceManager.getInstance();\n    /**\n     * constructor\n     * @param props\n     */\n    function Setting(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * state variable\n         */\n        _this.supportedMapTypes = jimu_core_1.Immutable([jimu_arcgis_1.ArcGISDataSourceTypes.WebMap]);\n        _this.supportedLayerTypes = jimu_core_1.Immutable([jimu_arcgis_1.ArcGISDataSourceTypes.FeatureLayer]);\n        _this.dsManager = jimu_core_1.DataSourceManager.getInstance();\n        _this.state = {\n            /**\n             * survey123\n             */\n            newSurveyTitle: null,\n            newSurveyTags: null,\n            newSurveyTitleDirty: false,\n            newSurveyTagsDirty: false,\n            newSurveySnippet: null,\n            newSurveyItemId: null,\n            // newSurveyThumbnailUrl: 'https://images-eu.ssl-images-amazon.com/images/I/61ot3Cx98aL.png',\n            newSurveyThumbnailUrls: [\n                'https://survey123.arcgis.com/assets/img/default-thumbnails/Image01.png',\n                'https://survey123.arcgis.com/assets/img/default-thumbnails/Image02.png',\n                'https://survey123.arcgis.com/assets/img/default-thumbnails/Image03.png'\n            ],\n            newSurveyMsg: null,\n            newSurveyLoading: false,\n            existSurveyMsg: null,\n            existSurveys: [],\n            selectedSurvey: null,\n            modalIsOpen: false,\n            mode: 'none',\n            isCheckedSurveyItemId: false,\n            isShowSurveyQuestionField: false,\n            surveyQuestionFields: [],\n            selectedQuestionField: null,\n            createSurveyErrorMsg: null,\n            surveyStatusCode: 0,\n            /**\n             * data source\n             */\n            dsMapView: null,\n            dsFeatureLayer: null,\n            dsFeatureLayerFields: [],\n            /**\n             * field-question mapping\n             */\n            mapWidgetList: [],\n            addMapping: null,\n            editMapping: null\n        };\n        _this.newDefaultValue = {\n            key: '',\n            value: ''\n        };\n        _this.iconRefresh = __webpack_require__(/*! jimu-ui/lib/icons/close.svg */ \"./jimu-ui/lib/icons/close.svg\");\n        _this.closeIcon24 = __webpack_require__(/*! jimu-ui/lib/icons/close-24.svg */ \"./jimu-ui/lib/icons/close-24.svg\");\n        _this.iconLink = __webpack_require__(/*! jimu-ui/lib/icons/link.svg */ \"./jimu-ui/lib/icons/link.svg\");\n        _this.iconRemove = __webpack_require__(/*! jimu-ui/lib/icons/delete.svg */ \"./jimu-ui/lib/icons/delete.svg\");\n        // set state: dsFeatureLayer after loaded if the dataSourceId exist\n        _this.componentDidMount = function () {\n            var useDataSources = _this.props.useDataSources;\n            var dataSourceId = (useDataSources && useDataSources.length) ? useDataSources[0].dataSourceId : null;\n            if (dataSourceId) {\n                var dataSource = _this.dsManager.getDataSource(dataSourceId);\n                var layer = dataSource ? dataSource.layer : null;\n                _this.setState({\n                    dsFeatureLayer: layer,\n                    dsFeatureLayerFields: _this.getLayerFields(layer)\n                });\n            }\n        };\n        _this.getLayerFields = function (layer) {\n            if (!layer) {\n                return [];\n            }\n            // clone the layer.fields\n            var fields = Object.assign({}, { fields: layer.fields }).fields;\n            if (layer.type !== 'feature') {\n                // table or other type (has no geometry)\n                return fields;\n            }\n            var existGeoField = (fields || []).find(function (item) {\n                return item.name === 'geometry';\n            });\n            if (existGeoField) {\n                return fields;\n            }\n            var type = layer.geometryType;\n            var geometryTypeStr = _this.nls('geometryType' + type.substr(0, 1).toUpperCase() + type.substr(1));\n            fields.push({\n                alias: _this.nls('geometryLabel') + \"(\" + geometryTypeStr + \")\",\n                name: 'geometry'\n            });\n            return fields;\n        };\n        /**\n         * on setting value changed\n         */\n        _this.onValueChanged = function (evt) {\n            var target = evt.currentTarget;\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.set(target.name, target.value)\n            });\n        };\n        _this.nls = function (id) {\n            return _this.props.intl.formatMessage({ id: id, defaultMessage: default_1.default[id] });\n        };\n        /**\n         * add default value\n         */\n        _this.addDefaultValue = function (evt) {\n            if (_this.newDefaultValue.key && _this.newDefaultValue.value) {\n                // this.props.config.defaultValue[this.newDefaultValue.key] = this.newDefaultValue.value;\n                /**\n                 * clear newDefaultValue key / value\n                 */\n                _this.newDefaultValue = {\n                    key: '',\n                    value: ''\n                };\n            }\n        };\n        /**\n         * listen to the desinger iframe\n         */\n        _this.addDesigerHandler = function () {\n            window.addEventListener('message', function (evt) {\n                if (evt.data) {\n                    var data = evt.data;\n                    // if the window get the message from other iframe, maybe it cannot be converted to object\n                    // We can only sure the message from webform can be converted to object\n                    try {\n                        if (typeof evt.data === 'string') {\n                            data = JSON.parse(evt.data) || {};\n                        }\n                    }\n                    catch (e) {\n                        // don't show the error\n                    }\n                    if (data.event === 'survey123:design:onFormPublished' && data.data) {\n                        var surveyStatusCode = _this.state.surveyStatusCode || 0;\n                        surveyStatusCode++;\n                        jimu_for_builder_1.builderAppSync.publishChangeWidgetStatePropToApp({ widgetId: _this.props.id, propKey: 'surveyStatusCode', value: surveyStatusCode });\n                        _this.setState({\n                            surveyStatusCode: surveyStatusCode\n                        });\n                        _this.handleCloseModal();\n                    }\n                    else if (data.event === 'survey123:design:onFormUnsaved' && data.data) {\n                        // todo: for #408, need survey desinger to trigger this event\n                    }\n                }\n            });\n        };\n        /**\n         * get field alias by fild name\n         */\n        _this.getFielAlias = function (field) {\n            var fields = _this.state.dsFeatureLayerFields || [];\n            var target = fields.find(function (item) {\n                return item.name === field;\n            });\n            if (target) {\n                return target.alias || target.name;\n            }\n            return field;\n        };\n        /**\n         * get question label by question name\n         */\n        _this.getQuestionLabel = function (questionName) {\n            var questions = _this.state.surveyQuestionFields || [];\n            var target = questions.find(function (item) {\n                return item.name === questionName;\n            });\n            if (target) {\n                return target.label || target.name;\n            }\n            return questionName;\n        };\n        /**\n         * on new survey value changed\n         */\n        _this.onNewSurveyValueChanged = function (e) {\n            var _a;\n            var target = e.currentTarget;\n            if (target.name) {\n                _this.setState((_a = {},\n                    _a[target.name] = target.value,\n                    _a));\n            }\n            if (target.name === 'newSurveyTags') {\n                _this.setState({\n                    newSurveyTagsDirty: true\n                });\n            }\n            if (target.name === 'newSurveyTitle') {\n                _this.setState({\n                    newSurveyTitleDirty: true\n                });\n            }\n        };\n        /**\n         * onExistSurveyChanged\n         */\n        _this.onExistSurveyChanged = function (e) {\n            var target = e.currentTarget;\n            if (target.value && target.value !== 'null') {\n                /**\n                 * update selected survey\n                 */\n                var selectedSurvey = _this.state.existSurveys.find(function (survey) { return survey.id === target.value; });\n                _this.updateMapWidgetList();\n                _this.setState({\n                    selectedSurvey: selectedSurvey\n                });\n            }\n        };\n        /**\n         * create survey\n         */\n        _this.createSurvey = function () {\n            return Promise.resolve(true)\n                .then(function () {\n                var _a;\n                /**\n                 * handle title, tags, description\n                 */\n                var title = _this.state.newSurveyTitle;\n                var tags = (_this.state.newSurveyTags || '').split(',').map(function (tag) { return tag.trim(); });\n                var snippet = _this.state.newSurveySnippet;\n                if (!title) {\n                    _this.setState({\n                        newSurveyTitleDirty: true\n                    });\n                }\n                if (!_this.state.newSurveyTags) {\n                    _this.setState({\n                        newSurveyTagsDirty: true\n                    });\n                }\n                if (!title || !tags || !tags.length) {\n                    // throw new Error('missing title or tags');\n                    throw new Error('');\n                }\n                /**\n                 * update msg\n                 */\n                _this.setState({\n                    newSurveyMsg: '',\n                    newSurveyLoading: true\n                });\n                var randomIdx = parseInt(Math.random() * 10 + '') % 3;\n                var thumbnail = _this.state.newSurveyThumbnailUrls[randomIdx];\n                return survey123_service_1.survey123Service.createSurvey(title, tags, {\n                    token: _this.props.token,\n                    username: (_a = _this.props.user) === null || _a === void 0 ? void 0 : _a.username,\n                    /**\n                     * portalUrl\n                     */\n                    portalUrl: _this.props.config.portalUrl || _this.props.portalUrl\n                }, {\n                    snippet: snippet,\n                    thumbnailUrl: thumbnail\n                });\n            })\n                .then(function (res) {\n                if (res.success === true) {\n                    _this.updateMapWidgetList();\n                    /**\n                     * set item id\n                     */\n                    _this.setState({\n                        createSurveyErrorMsg: null,\n                        newSurveyItemId: res.id,\n                        selectedSurvey: res,\n                        newSurveyLoading: false\n                    });\n                    return res.id;\n                }\n                if (res.error && res.error.code + '' == '400') {\n                    _this.setState({\n                        createSurveyErrorMsg: 'A survey with this name already exists, please choose a different name.',\n                        newSurveyLoading: false,\n                        newSurveyTitleDirty: false\n                    });\n                    return null;\n                }\n                throw res;\n            })\n                .then(function (itemId) {\n                if (!itemId) {\n                    return;\n                }\n                /**\n                 * we should set hides in config\n                 */\n                _this.props.onSettingChange({\n                    id: _this.props.id,\n                    config: _this.props.config.set('hides', ['navbar', 'header', 'description', 'footer', 'theme'])\n                });\n                /**\n                 * show survey123 designer modal\n                 */\n                _this.showSurvey123DesignerModal(itemId);\n            })\n                .catch(function (err) {\n                if (err) {\n                    /**\n                     * update msg\n                     */\n                    _this.setState({\n                        newSurveyMsg: err.message ? err.message : (typeof err === 'string') ? err : '',\n                        newSurveyLoading: false\n                    });\n                }\n                console.error(err);\n            });\n        };\n        /**\n         * query survey\n         */\n        _this.querySurvey = function (options) {\n            var _a;\n            // options\n            options = Object.assign({\n                isShared: false,\n                isPublished: true\n            }, options || {});\n            if (_this.props.config.surveyItemId && _this.props.config.selectedSurvey) {\n                var selectedSurvey_1 = _this.props.config.selectedSurvey;\n                // this.state.mode = 'settings';\n                setTimeout(function () {\n                    _this.props.onSettingChange({\n                        id: _this.props.id,\n                        config: _this.props.config.set('surveyItemId', selectedSurvey_1.id)\n                    });\n                    /**\n                     * switch to settings page\n                     */\n                    _this.updateMapWidgetList();\n                    _this.setState({\n                        existSurveyMsg: null,\n                        mode: 'settings',\n                        selectedSurvey: selectedSurvey_1\n                    });\n                }, 0);\n                // this.setSurveyItemId();\n                return survey123_service_1.survey123Service.querySurvey({ username: (_a = _this.props.user) === null || _a === void 0 ? void 0 : _a.username, token: _this.props.token, portalUrl: _this.props.config.portalUrl || _this.props.portalUrl }, { isShared: options.isShared, isPublished: options.isPublished })\n                    .then(function (surveys) {\n                    _this.setState({\n                        existSurveys: surveys\n                    });\n                });\n            }\n            return Promise.resolve(true)\n                .then(function () {\n                if (_this.state.mode === 'none') {\n                    _this.setState({\n                        mode: 'survey-createSurvey'\n                    });\n                }\n                /**\n                 * update msg\n                 */\n                _this.setState({\n                    existSurveyMsg: '<div class=\"survey-list-loading-outter\"><div class=\"jimu-secondary-loading\"></div></div>'\n                });\n                return survey123_service_1.survey123Service.querySurvey({\n                    username: _this.props.user.username,\n                    token: _this.props.token,\n                    portalUrl: _this.props.config.portalUrl || _this.props.portalUrl\n                }, {\n                    isShared: options.isShared,\n                    isPublished: options.isPublished\n                });\n            })\n                .then(function (surveys) {\n                // console.log(surveys);\n                /**\n                 * update msg and existing surveys\n                 */\n                _this.setState({\n                    existSurveyMsg: null,\n                    existSurveys: surveys\n                });\n                /**\n                 * update selected survey\n                 */\n                var usedSurveyItemId = _this.props.config.surveyItemId;\n                if (usedSurveyItemId) {\n                    var selectedSurvey = surveys.find(function (survey) { return survey.id === usedSurveyItemId; });\n                    if (selectedSurvey) {\n                        _this.updateMapWidgetList();\n                        _this.setState({\n                            selectedSurvey: selectedSurvey\n                        });\n                        _this.props.onSettingChange({\n                            id: _this.props.id,\n                            config: _this.props.config.set('selectedSurvey', selectedSurvey)\n                        });\n                    }\n                }\n            })\n                .catch(function (err) {\n                _this.setState({\n                    mode: 'survey-createSurvey',\n                    existSurveyMsg: '<p class=\"error-message\">error when load existing surveys</p>' // 'error when load existing surveys'\n                });\n                console.log(err);\n            });\n        };\n        /**\n         * get survey question fields\n         */\n        _this.getSurveyQuestionFields = function () {\n            var surveyItemId = _this.props.config.surveyItemId;\n            return Promise.resolve(true)\n                .then(function () {\n                if (surveyItemId && _this.props.token) {\n                    return survey123_service_1.survey123Service.getSurveyQuestionFields(surveyItemId, {\n                        token: _this.props.token\n                    });\n                }\n            })\n                .then(function (fields) {\n                if (fields) {\n                    _this.setState({\n                        surveyQuestionFields: fields\n                    });\n                }\n                return fields;\n            });\n        };\n        /**\n         * remove default value\n         */\n        // removeDefaultValue = (key: string, evt: any) => {\n        //   let defaultValue = this.props.config.defaultValue;\n        //   if (key && defaultValue[key]) {\n        //     delete defaultValue[key];\n        //   }\n        // }\n        /**\n         * show setting page\n         */\n        _this.showSettingPage = function () {\n            _this.setState({\n                mode: 'settings'\n            });\n            /**\n             * get survey question fields\n             */\n            _this.getSurveyQuestionFields();\n        };\n        /**\n         * handle close modal\n         */\n        _this.handleCloseModal = function () {\n            _this.setState({\n                modalIsOpen: false\n            });\n            _this.showSettingPage();\n            /**\n             * update survey itemid in props config\n             */\n            var surveyItemId = _this.state.newSurveyItemId || _this.props.config.surveyItemId;\n            if (surveyItemId) {\n                _this.props.onSettingChange({\n                    id: _this.props.id,\n                    config: _this.props.config.set('surveyItemId', surveyItemId).set('timestamp', Date.now())\n                });\n            }\n        };\n        /**\n         * get thumbnail url from portal\n         */\n        _this.getThumbnailUrl = function () {\n            var portalUrl = _this.props.config.portalUrl || _this.props.portalUrl || 'https://www.arcgis.com';\n            var surveyItemId = _this.state.selectedSurvey.id;\n            var thumbnail = _this.state.selectedSurvey.thumbnail;\n            if ((thumbnail + '').startsWith('http://') || (thumbnail + '').startsWith('https://')) {\n                return thumbnail;\n            }\n            return portalUrl + \"/sharing/rest/content/items/\" + surveyItemId + \"/info/\" + thumbnail + \"?token=\" + _this.props.token;\n        };\n        /**\n         * set survey item id\n         * update this.props.config\n         */\n        _this.setSurveyItemId = function () {\n            var selectedSurvey = _this.state.selectedSurvey;\n            if (selectedSurvey && selectedSurvey.id) {\n                /**\n                 * update props to have the same setting in runtime\n                 * and ensure the hides are all switched on\n                 */\n                _this.props.onSettingChange({\n                    id: _this.props.id,\n                    config: _this.props.config.set('surveyItemId', selectedSurvey.id).set('hides', ['navbar', 'header', 'description', 'footer', 'theme'])\n                });\n                /**\n                 * switch to settings page\n                 */\n                _this.setState({\n                    mode: 'settings'\n                });\n            }\n        };\n        /**\n         * edit survey\n         */\n        _this.editSurvey = function () {\n            _this.showSurvey123DesignerModal();\n        };\n        /**\n         * set appearance\n         */\n        _this.setAppearance = function (isChecked, value) {\n            // let target = e.currentTarget;\n            // let value = target.value;\n            // clone this.props.config.hides\n            var hides = [].concat(_this.props.config.hides || []);\n            // let isChecked = target.checked;\n            if (isChecked && hides.indexOf(value) >= 0) {\n                var pos = hides.indexOf(value);\n                hides.splice(pos, 1);\n                // hides = hides.concat([value])\n            }\n            else {\n                hides.push(value);\n            }\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.set('hides', hides)\n            });\n        };\n        /**\n         * set selected map view\n         */\n        _this.onMapWidgetSelected = function (useMapWidgetIds) {\n            if (!useMapWidgetIds || !useMapWidgetIds.length) {\n                _this.clearMapping();\n            }\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                useMapWidgetIds: useMapWidgetIds\n            });\n        };\n        /**\n         * on feature layer view selected\n         */\n        _this.onFeatureLayerViewSelected = function (selectedDsJsons, d) {\n            if (d && d.dataSourceJson && d.rootDataSourceId) {\n                /**\n                 * update state\n                 */\n                _this.setState({\n                    dsMapView: null,\n                    dsFeatureLayer: d\n                });\n                /**\n                 * embed params\n                 */\n                var embeds = _this.props.config.embeds || [];\n                if (embeds.indexOf('associatedMap') === -1) {\n                    embeds = embeds.concat(['associatedMap']);\n                }\n                /**\n                 * update useDataSources\n                 */\n                _this.props.onSettingChange({\n                    id: _this.props.id,\n                    config: _this.props.config.set('embeds', embeds).set('dsType', jimu_arcgis_1.ArcGISDataSourceTypes.FeatureLayer)\n                    /* useDataSources: Immutable([{\n                      dataSourceId: d.dataSourceJson.id,\n                      rootDataSourceId: d.rootDataSourceId\n                    }]) as ImmutableArray<IMUseDataSource> */\n                });\n            }\n        };\n        _this.updateMapWidgetList = function () {\n            // get the map widget list\n            var state = window._appState;\n            var appConfig = window && window.jimuConfig && window.jimuConfig.isBuilder ? state.appStateInBuilder && state.appStateInBuilder.appConfig : state.appConfig;\n            var widgets = appConfig && appConfig.widgets;\n            // eslint-disable-next-line max-len\n            var mapWidgetList = widgets ? Object.keys(widgets).filter(function (wId) { return widgets[wId] && widgets[wId].manifest && widgets[wId].manifest.properties && widgets[wId].manifest.properties.canCreateMapView; }).map(function (wId) { return widgets[wId]; }) : [];\n            _this.setState({\n                mapWidgetList: mapWidgetList\n            });\n        };\n        _this.activeLinkDataChange = function (e) {\n            var target = e.currentTarget;\n            var isActive = target.checked;\n            if (isActive) {\n                _this.updateMapWidgetList();\n            }\n            /**\n             * update activeLinkData in data source\n             */\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.set('activeLinkData', isActive),\n            });\n        };\n        /**\n         * on map view selected\n         */\n        _this.onMapViewSelected = function (selectedDsJsons, d) {\n            if (d && d.dataSourceJson) {\n                // if (d && d.dataSourceJson && d.rootDataSourceId) {\n                // let mapViewDSJson = d.dataSourceJson;\n                /**\n                 * update state\n                 */\n                _this.setState({\n                    dsMapView: d,\n                    dsFeatureLayer: null,\n                    dsFeatureLayerFields: []\n                });\n                /**\n                 * embed params\n                 */\n                var embeds = _this.props.config.embeds || [];\n                if (embeds.indexOf('associatedMap') === -1) {\n                    embeds = embeds.concat(['associatedMap']);\n                }\n                /**\n                 * update props\n                 */\n                _this.props.onSettingChange({\n                    id: _this.props.id,\n                    config: _this.props.config.set('embeds', embeds).set('selectedSurveyQuestionFields', []).set('dsType', jimu_arcgis_1.ArcGISDataSourceTypes.Map)\n                    /* useDataSources: Immutable([{\n                      dataSourceId: d.dataSourceJson.id,\n                      rootDataSourceId: d.rootDataSourceId\n                    }]) as ImmutableArray<IMUseDataSource> */\n                });\n            }\n        };\n        /**\n         * on feature layer field selected\n         */\n        _this.onFieldSelected = function (allSelectedFields, field, ds) {\n            /**\n             * update fields in data source\n             */\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.setIn(['title', 'field'], field.name),\n                useDataSources: [{\n                        dataSourceId: _this.props.useDataSources[0].dataSourceId,\n                        rootDataSourceId: _this.props.useDataSources[0].rootDataSourceId,\n                        fields: [field.name]\n                    }]\n            });\n        };\n        /**\n         * select a feature layer\n         */\n        _this.onDataSourceSelected = function (jimuLayerViewInfo) {\n            if (!jimuLayerViewInfo) {\n                _this.clearMapping();\n            }\n            var dataSourceId = jimuLayerViewInfo ? jimuLayerViewInfo.datasourceId : null;\n            var dataSource = _this.dsManager.getDataSource(dataSourceId);\n            // let schema = null;\n            // if (dataSource) {\n            //   schema = dataSource.getSchema();\n            //   fields = schema ? (schema.fields || []) : [];\n            // }\n            var layer = dataSource ? dataSource.layer : null;\n            if (!dataSourceId || !dataSource || !layer) {\n                _this.clearMapping();\n            }\n            _this.setState({\n                dsFeatureLayer: layer,\n                dsFeatureLayerFields: _this.getLayerFields(layer)\n            });\n            var rootDataSourceId = jimuLayerViewInfo ? jimuLayerViewInfo.rootDatasourceId : null;\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                useDataSources: [{\n                        dataSourceId: dataSourceId,\n                        rootDataSourceId: rootDataSourceId\n                    }],\n                config: _this.props.config.set('layerViewInfo', jimuLayerViewInfo).set('fieldQuestionMapping', null),\n            }, [{\n                    id: _this.props.id + \"-output\",\n                    label: _this.props.label + \" Query Result\",\n                    type: jimu_arcgis_1.ArcGISDataSourceTypes.FeatureLayer,\n                    originDataSources: [{ dataSourceId: dataSourceId, rootDataSourceId: rootDataSourceId }]\n                }]);\n            // this.props.onSettingChange({\n            //   id: this.props.id,\n            //   useDataSources: [{\n            //     dataSourceId: currentSelectedDs.dataSourceJson.id,\n            //     rootDataSourceId: currentSelectedDs.rootDataSourceId\n            //   }],\n            // }, [{\n            //   id: `${this.props.id}-output`,\n            //   label: `${this.props.label} Query Result`,\n            //   type: ArcGISDataSourceTypes.FeatureLayerView,\n            //   originDataSources: [{dataSourceId: currentSelectedDs.dataSourceJson.id, rootDataSourceId: currentSelectedDs.rootDataSourceId}]\n            // }]);\n        };\n        /**\n         * change the layer field in field-question mapping panel\n         */\n        _this.addMapppingChange = function (type, e) {\n            var target = e.currentTarget;\n            var value = target.value;\n            var field = _this.state.addMapping ? _this.state.addMapping.field : null;\n            var question = _this.state.addMapping ? _this.state.addMapping.question : null;\n            if (type === 'field') {\n                field = value;\n            }\n            else {\n                question = value;\n            }\n            _this.setState({\n                addMapping: {\n                    field: field,\n                    question: question\n                }\n            });\n        };\n        /**\n         * clear the setting of field-question mapping\n         */\n        _this.clearMapping = function () {\n            // todo:\n        };\n        _this.onDataSourceRemoved = function () {\n            // todo\n        };\n        /**\n         * trigger evnet type change\n         */\n        _this.triggerEventTypeChange = function () {\n        };\n        /**\n         * show edit mapping panel\n         */\n        _this.showEditMappingPanel = function (index, e) {\n            var curEditMapping = _this.state.editMapping || {};\n            if (curEditMapping.index === index) {\n                return;\n            }\n            var mappings = _this.props.config.fieldQuestionMapping || [];\n            mappings = (index >= 0 && index < mappings.length) ? mappings[index] : null;\n            var newMapping = Object.assign({}, mappings);\n            newMapping['index'] = index;\n            _this.setState({\n                editMapping: newMapping,\n                addMapping: null\n            });\n        };\n        /**\n         * change the edit mapping\n         */\n        _this.changeEditMapping = function (type, e) {\n            var target = e.currentTarget;\n            var value = target.value;\n            var curSetting = Object.assign({}, _this.state.editMapping || {});\n            if (type === 'field') {\n                curSetting.field = value;\n            }\n            else {\n                curSetting.question = value;\n            }\n            _this.setState({\n                editMapping: curSetting\n            });\n        };\n        /**\n         * change an field/question mapping\n         */\n        _this.editMapping = function (index) {\n            var mapping = [].concat(_this.props.config.fieldQuestionMapping || []);\n            var curEditMapping = _this.state.editMapping || {};\n            if (index >= 0 && index < mapping.length) {\n                mapping[index] = {\n                    field: curEditMapping.field,\n                    question: curEditMapping.question\n                };\n            }\n            // delete mapping[field];\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.set('fieldQuestionMapping', mapping)\n            });\n        };\n        /**\n         * add connection for field and question\n         */\n        _this.activeAddFieldQuestionConnPanel = function () {\n            _this.setState({\n                addMapping: {\n                    field: null,\n                    question: null\n                },\n                editMapping: null\n            });\n        };\n        /**\n         * hide the field-question panel\n         */\n        _this.deactiveAddFieldQuestionConnPanel = function () {\n            _this.setState({\n                addMapping: null\n            });\n        };\n        _this.deleteConnection = function (index, e) {\n            if (e) {\n                e.stopPropagation();\n            }\n            var mapping = [].concat(_this.props.config.fieldQuestionMapping || []);\n            if (index >= 0 && index < mapping.length) {\n                mapping.splice(index, 1);\n            }\n            // delete mapping[field];\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.set('fieldQuestionMapping', mapping)\n            });\n        };\n        /**\n         * add a field-question mapping\n         */\n        _this.addFieldQuestionConn = function (e) {\n            var field = _this.state.addMapping.field;\n            var question = _this.state.addMapping.question;\n            if (!field || !question) {\n                console.log('Please ensure field/question is not null.');\n                return;\n            }\n            var mapping = [].concat(_this.props.config.fieldQuestionMapping || []);\n            mapping.push({\n                field: field,\n                question: question\n            });\n            // mapping[field] = question;\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.set('fieldQuestionMapping', mapping)\n            });\n            _this.deactiveAddFieldQuestionConnPanel();\n        };\n        /**\n         * on survey question field changed\n         */\n        _this.onSurveyQuestionFieldChanged = function (e) {\n            var target = e.currentTarget;\n            var value = target.value;\n            /**\n             * update fields in data source\n             */\n            if (value && value !== 'null') {\n                _this.props.onSettingChange({\n                    id: _this.props.id,\n                    config: _this.props.config.set('selectedSurveyQuestionFields', [value]),\n                });\n            }\n        };\n        /**\n         * isDsConfigured\n         */\n        _this.isDsConfigured = function () {\n            if (_this.props.useDataSources &&\n                _this.props.useDataSources.length === 1) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         * reset survey\n         */\n        _this.resetSurvey = function () {\n            /**\n             * reset survey item id\n             */\n            _this.props.onSettingChange({\n                id: _this.props.id,\n                config: _this.props.config.set('surveyItemId', null).set('hides', [])\n                    .set('embeds', ['fullScreen', 'onSubmitted'])\n                    //.set('embeds', ['fullScreen'])\n                    .set('selectedSurveyQuestionFields', [])\n                    .set('fieldQuestionMapping', [])\n                    .set('activeLinkData', false)\n                    .set('dsType', null).set('selectedSurvey', null)\n            });\n            _this.setState({\n                mode: 'survey-createSurvey',\n                selectedSurvey: null,\n                isCheckedSurveyItemId: false,\n                surveyQuestionFields: [],\n                dsMapView: null,\n                dsFeatureLayer: null,\n                dsFeatureLayerFields: []\n            });\n        };\n        /**\n         * query existing survey\n         */\n        _this.querySurvey();\n        _this.addDesigerHandler();\n        return _this;\n    }\n    /**\n     * show survey123 designer modal\n     */\n    Setting.prototype.showSurvey123DesignerModal = function (surveyItemId) {\n        surveyItemId = surveyItemId || this.props.config.surveyItemId;\n        var sessionManager = jimu_core_1.SessionManager.getInstance();\n        var portalUrl = this.props.config.portalUrl || this.props.portalUrl;\n        if (!surveyItemId) {\n            throw new Error('cannot get survey item id to open survey123 designer');\n        }\n        /**\n         * popup window and embed survey123 designer\n         */\n        var url = survey123_service_1.survey123Service.getSurvey123DesignerUrl(surveyItemId, {\n            portalUrl: portalUrl\n        });\n        /**\n         * we need to add access_token / username / expires_in in hash\n         * to tell survey123 website to parse the hash to use the token\n         */\n        var session = sessionManager.getMainSession();\n        if (session && session.token && session.username && session.tokenDuration) {\n            url += \"#access_token=\" + session.token + \"&username=\" + session.username + \"&expires_in=\" + session.tokenDuration;\n        }\n        /**\n         * show modal\n         */\n        this.setState({\n            modalIsOpen: true,\n            newSurveyMsg: null\n        });\n        /**\n         * cannot use window.open because address bar will be shown.\n         * try to use modal and iframe to show survey123 designer webpage\n         */\n        var self = this;\n        var index = 0;\n        var checkTimer = setInterval(function () {\n            if (!self.state.modalIsOpen) {\n                self.setState({\n                    modalIsOpen: true\n                });\n            }\n            index++;\n            var target = document.getElementById('survey123-designer');\n            if (target || index > 100) {\n                clearInterval(checkTimer);\n                target.src = url;\n            }\n        }, 50);\n        // setTimeout(() => {\n        //   let target: any = document.getElementById('survey123-designer');\n        //   target.src = url;\n        // }, 200);\n    };\n    /**\n     * render\n     */\n    Setting.prototype.render = function () {\n        var _this = this;\n        // let defaultValue = this.props.config.defaultValue;\n        // const usedFieldName = this.props.useDataSources && this.props.useDataSources[0] &&\n        //   this.props.useDataSources[0].fields && this.props.useDataSources[0].fields[0];\n        // const selectedSurveyQuestionField = this.props.config.selectedSurveyQuestionFields && this.props.config.selectedSurveyQuestionFields[0];\n        /**\n         * show setting page\n         */\n        if (this.state.selectedSurvey && this.props.config.surveyItemId && this.state.isCheckedSurveyItemId === false) {\n            this.setState({\n                isCheckedSurveyItemId: true\n            });\n            this.showSettingPage();\n        }\n        /**\n         * render\n         */\n        return jimu_core_1.jsx(\"div\", { css: style_1.getStyle(this.props.theme), className: \"jimu-widget-setting survey123\" },\n            jimu_core_1.jsx(\"div\", { className: \"survey123__section\", style: (this.state.mode.indexOf('survey-') !== -1) ?\n                    { display: 'block' }\n                    : { display: 'none' } },\n                jimu_core_1.jsx(setting_components_1.SettingSection, null,\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"p\", null, this.props.intl.formatMessage({ id: 'chooseSurvey', defaultMessage: default_1.default.chooseSurvey }))),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(jimu_ui_1.Radio, { name: \"survey-survey\", className: \"cursor-pointer\", id: \"survey-survey-createNewSurvey\", checked: this.state.mode === 'survey-createSurvey', onChange: function () { _this.setState({ mode: 'survey-createSurvey' }); } }),\n                        jimu_core_1.jsx(jimu_ui_1.Label, { for: \"survey-survey-createNewSurvey\", className: \"cursor-pointer\" },\n                            \"\\u00A0\\u00A0\",\n                            this.props.intl.formatMessage({ id: 'createNewSurveyLabel', defaultMessage: default_1.default.createNewSurveyLabel }))),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(jimu_ui_1.Radio, { name: \"survey-survey\", className: \"cursor-pointer\", id: \"survey-survey-chooseExistingSurvey\", checked: this.state.mode === 'survey-selectExistingSurvey', onChange: function () { _this.setState({ mode: 'survey-selectExistingSurvey' }); } }),\n                        jimu_core_1.jsx(jimu_ui_1.Label, { for: \"survey-survey-chooseExistingSurvey\", className: \"cursor-pointer\" },\n                            \"\\u00A0\\u00A0\",\n                            this.props.intl.formatMessage({ id: 'chooseSurveyLabel', defaultMessage: default_1.default.chooseSurveyLabel })))),\n                jimu_core_1.jsx(\"div\", { className: \"survey123__section-selectExistingSurvey\", style: (this.state.mode === 'survey-selectExistingSurvey') ?\n                        { display: 'block' }\n                        : { display: 'none' } },\n                    jimu_core_1.jsx(setting_components_1.SettingSection, { className: \"select-survey-section\" },\n                        jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                            jimu_core_1.jsx(jimu_ui_1.Select, { onChange: this.onExistSurveyChanged, disabled: this.state.existSurveys.length === 0, value: (this.state.selectedSurvey) ? this.state.selectedSurvey.id : 'null', style: { width: '100%', padding: '2px 5px' } },\n                                jimu_core_1.jsx(\"option\", { value: \"null\" }, this.props.intl.formatMessage({ id: 'selectSurveyTip', defaultMessage: default_1.default.selectSurveyTip })),\n                                (this.state.existSurveys.length > 0) ?\n                                    this.state.existSurveys.map(function (survey) {\n                                        return jimu_core_1.jsx(\"option\", { value: survey.id, key: survey.id }, survey.title);\n                                    })\n                                    : '')),\n                        jimu_core_1.jsx(\"div\", { className: \"survey-list-msg\", dangerouslySetInnerHTML: { __html: this.state.existSurveyMsg } })),\n                    jimu_core_1.jsx(\"div\", { style: {\n                            display: (this.state.selectedSurvey) ? 'block' : 'none'\n                        } },\n                        jimu_core_1.jsx(setting_components_1.SettingSection, { title: this.nls('surveyDetailLabel'), className: \"create-survey-container\" }, (this.state.selectedSurvey) ?\n                            [\n                                jimu_core_1.jsx(setting_components_1.SettingRow, { key: \"surveyThumnail\" },\n                                    jimu_core_1.jsx(\"img\", { src: this.getThumbnailUrl(), style: { width: '100%', height: 'auto' } })),\n                                jimu_core_1.jsx(setting_components_1.SettingRow, { key: \"surveyTitle\" },\n                                    jimu_core_1.jsx(\"span\", { style: { wordBreak: 'break-word', fontSize: '0.8125rem', color: '#FFFFFF' } }, this.state.selectedSurvey.title)),\n                                // <SettingRow label=\"Tags\"><p className=\"w-100\">{this.state.selectedSurvey.tags}</p></SettingRow>,\n                                // <SettingRow>{this.state.selectedSurvey.owner}</SettingRow>,\n                                this.state.selectedSurvey.snippet ?\n                                    jimu_core_1.jsx(setting_components_1.SettingRow, { className: \"items\", key: \"surveySnippet\" },\n                                        jimu_core_1.jsx(\"h6\", null, this.nls('summaryLabel')),\n                                        jimu_core_1.jsx(\"div\", { className: \"w-100\" }, this.state.selectedSurvey.snippet))\n                                    :\n                                        null,\n                                jimu_core_1.jsx(setting_components_1.SettingRow, { key: \"surveyInsertBtn\" },\n                                    jimu_core_1.jsx(jimu_ui_1.Button, { type: \"primary\", className: \"w-100\", onClick: this.setSurveyItemId }, this.props.intl.formatMessage({ id: 'insertLabel', defaultMessage: default_1.default.insertLabel })))\n                            ] :\n                            null))),\n                jimu_core_1.jsx(\"div\", { className: \"survey123__section-createSurvey\", style: (this.state.mode === 'survey-createSurvey') ?\n                        { display: 'block' }\n                        : { display: 'none' } },\n                    jimu_core_1.jsx(setting_components_1.SettingSection, null,\n                        jimu_core_1.jsx(\"div\", { className: \"w-100 d-flex flex-wrap align-items-center justify-content-between setting-header setting-title pb-2\" },\n                            jimu_core_1.jsx(\"div\", null,\n                                this.nls('surveyTitleLabel'),\n                                jimu_core_1.jsx(\"span\", { className: \"isRequired\" }, \"*\")),\n                            jimu_core_1.jsx(jimu_ui_1.TextInput, { className: \"w-100\", value: this.state.newSurveyTitle || '', name: \"newSurveyTitle\", onChange: this.onNewSurveyValueChanged }),\n                            !this.state.newSurveyTitle && this.state.newSurveyTitleDirty ?\n                                jimu_core_1.jsx(\"div\", { className: \"error-message\" }, this.props.intl.formatMessage({ id: 'surveyTitleRequiredMsg', defaultMessage: default_1.default.surveyTitleRequiredMsg }))\n                                :\n                                    '',\n                            this.state.createSurveyErrorMsg && !this.state.newSurveyTitleDirty ?\n                                jimu_core_1.jsx(\"div\", { className: \"error-message\" }, this.props.intl.formatMessage({ id: 'surveyTitleDuplicateMsg', defaultMessage: default_1.default.surveyTitleDuplicateMsg }))\n                                :\n                                    ''),\n                        jimu_core_1.jsx(\"div\", { className: \"w-100 d-flex flex-wrap align-items-center justify-content-between setting-header setting-title pb-2\" },\n                            jimu_core_1.jsx(\"div\", null,\n                                this.nls('surveyTagLabel'),\n                                jimu_core_1.jsx(\"span\", { className: \"isRequired\" }, \"*\")),\n                            jimu_core_1.jsx(jimu_ui_1.TextInput, { className: \"w-100\", value: this.state.newSurveyTags || '', name: \"newSurveyTags\", onChange: this.onNewSurveyValueChanged }),\n                            !this.state.newSurveyTags && this.state.newSurveyTagsDirty ?\n                                jimu_core_1.jsx(\"div\", { className: \"error-message\" }, this.props.intl.formatMessage({ id: 'surveyTagsRequiredMsg', defaultMessage: default_1.default.surveyTagsRequiredMsg }))\n                                :\n                                    ''),\n                        jimu_core_1.jsx(\"div\", { className: \"w-100 d-flex flex-wrap align-items-center justify-content-between setting-header setting-title pb-2\" },\n                            jimu_core_1.jsx(\"div\", null, this.nls('surveySummaryLabel')),\n                            jimu_core_1.jsx(jimu_ui_1.TextInput, { className: \"w-100\", value: this.state.newSurveySnippet || '', name: \"newSurveySnippet\", onChange: this.onNewSurveyValueChanged })),\n                        jimu_core_1.jsx(setting_components_1.SettingRow, { flow: \"wrap\" },\n                            jimu_core_1.jsx(jimu_ui_1.Button, { type: \"primary\", className: \"w-100\", disabled: this.state.newSurveyLoading === true, onClick: this.createSurvey }, this.props.intl.formatMessage({ id: 'createSurveyBtn', defaultMessage: default_1.default.createSurveyBtn })),\n                            jimu_core_1.jsx(\"span\", { style: {\n                                    color: '#ff0000',\n                                    marginTop: '10px'\n                                } }, this.state.newSurveyMsg),\n                            jimu_core_1.jsx(\"div\", { className: \"w-100\", style: {\n                                    position: 'relative',\n                                    display: 'block',\n                                    marginTop: '50px'\n                                } },\n                                jimu_core_1.jsx(\"div\", { className: \"jimu-secondary-loading\", style: (this.state.newSurveyLoading === true) ? { display: 'block' } : { display: 'none' } })))))),\n            jimu_core_1.jsx(\"div\", { className: \"survey123__section\", style: (this.state.mode.indexOf('settings') !== -1) ?\n                    { display: 'block' }\n                    : { display: 'none' } },\n                jimu_core_1.jsx(setting_components_1.SettingSection, null,\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"div\", { className: \"section-title\" },\n                            jimu_core_1.jsx(\"h6\", null, (this.state.selectedSurvey) ? this.state.selectedSurvey.title : ''),\n                            jimu_core_1.jsx(jimu_ui_1.Button, { className: \"survey123__section-resetSurvey\", onClick: function () { return _this.setState({ mode: 'confirmResetSurvey' }); } },\n                                jimu_core_1.jsx(jimu_ui_1.Icon, { size: \"8\", icon: this.iconRefresh })))),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(jimu_ui_1.Button, { className: \"w-100\", color: \"primary\", type: \"primary\", onClick: this.editSurvey }, this.props.intl.formatMessage({ id: 'editSurveyBtn', defaultMessage: default_1.default.editSurveyBtn })))),\n                jimu_core_1.jsx(setting_components_1.SettingSection, { title: this.nls('appearanceTitle') },\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"div\", { className: \"appearance\" },\n                            jimu_core_1.jsx(\"span\", null, this.props.intl.formatMessage({ id: 'showOptionsBarLabel', defaultMessage: default_1.default.showOptionsBarLabel })),\n                            jimu_core_1.jsx(jimu_ui_1.Switch, { className: \"can-x-switch\", checked: this.props.config.hides.indexOf('navbar') < 0, onChange: function (evt) { _this.setAppearance(evt.target.checked, 'navbar'); } }))),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"div\", { className: \"appearance\" },\n                            jimu_core_1.jsx(\"span\", null, this.props.intl.formatMessage({ id: 'showOptionsHeaderLabel', defaultMessage: default_1.default.showOptionsHeaderLabel })),\n                            jimu_core_1.jsx(jimu_ui_1.Switch, { className: \"can-x-switch\", checked: this.props.config.hides.indexOf('header') < 0, onChange: function (evt) { _this.setAppearance(evt.target.checked, 'header'); } }))),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"div\", { className: \"appearance\" },\n                            jimu_core_1.jsx(\"span\", null, this.props.intl.formatMessage({ id: 'showOptionsDesLabel', defaultMessage: default_1.default.showOptionsDesLabel })),\n                            jimu_core_1.jsx(jimu_ui_1.Switch, { className: \"can-x-switch\", checked: this.props.config.hides.indexOf('description') < 0, onChange: function (evt) { _this.setAppearance(evt.target.checked, 'description'); } }))),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"div\", { className: \"appearance\" },\n                            jimu_core_1.jsx(\"span\", null, this.props.intl.formatMessage({ id: 'showOptionsFooterLabel', defaultMessage: default_1.default.showOptionsFooterLabel })),\n                            jimu_core_1.jsx(jimu_ui_1.Switch, { className: \"can-x-switch\", checked: this.props.config.hides.indexOf('footer') < 0, onChange: function (evt) { _this.setAppearance(evt.target.checked, 'footer'); } }))),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"div\", { className: \"appearance\" },\n                            jimu_core_1.jsx(\"span\", null, this.props.intl.formatMessage({ id: 'useSurveyTheme', defaultMessage: default_1.default.useSurveyTheme })),\n                            jimu_core_1.jsx(jimu_ui_1.Switch, { className: \"can-x-switch\", checked: this.props.config.hides.indexOf('theme') < 0, onChange: function (evt) { _this.setAppearance(evt.target.checked, 'theme'); } })))),\n                jimu_core_1.jsx(setting_components_1.SettingSection, null,\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(\"div\", { className: \"section-title\" },\n                            jimu_core_1.jsx(\"h6\", null, this.nls('sendDataToSurveyTitle')),\n                            jimu_core_1.jsx(jimu_ui_1.Switch, { className: \"can-x-switch\", checked: this.props.config.activeLinkData, onChange: this.activeLinkDataChange }))),\n                    this.props.config.activeLinkData &&\n                        jimu_core_1.jsx(jimu_core_1.React.Fragment, null, this.state.mapWidgetList && this.state.mapWidgetList.length > 0 ?\n                            jimu_core_1.jsx(jimu_core_1.React.Fragment, null,\n                                jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                                    jimu_core_1.jsx(\"span\", { className: \"w-100\" }, this.nls('sendDataToSurveyDesc'))),\n                                jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                                    jimu_core_1.jsx(\"span\", null, this.nls('selectSourceWidget'))),\n                                jimu_core_1.jsx(\"div\", { className: \"setting-row\" },\n                                    jimu_core_1.jsx(setting_components_1.JimuMapViewSelector, { onSelect: this.onMapWidgetSelected, useMapWidgetIds: this.props.useMapWidgetIds })),\n                                jimu_core_1.jsx(setting_components_1.SettingRow, { className: \"fea-layer-outter\" },\n                                    jimu_core_1.jsx(setting_components_1.SettingRow, { className: \"use-feature-layer-setting\" },\n                                        jimu_core_1.jsx(\"span\", null, this.nls('selectSourceLayer'))),\n                                    jimu_core_1.jsx(\"div\", { className: \"feature-layer-dropdown\" },\n                                        jimu_core_1.jsx(setting_components_1.JimuLayerViewSelector, { onSelect: this.onDataSourceSelected, useMapWidgetIds: this.props.useMapWidgetIds, jimuLayerViewInfo: this.props.config && this.props.config.layerViewInfo }))),\n                                jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                                    jimu_core_1.jsx(\"span\", { className: \"w-100\" }, this.nls('triggerEventDesc1'))),\n                                jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                                    jimu_core_1.jsx(\"span\", null, this.nls('addConnTitle'))),\n                                (this.props.useMapWidgetIds && this.props.useMapWidgetIds.length && this.props.config && this.props.config.layerViewInfo && this.props.config.layerViewInfo.datasourceId) ?\n                                    jimu_core_1.jsx(jimu_core_1.React.Fragment, null,\n                                        (this.props.config.fieldQuestionMapping && this.props.config.fieldQuestionMapping.length > 0) ?\n                                            jimu_core_1.jsx(\"div\", null, this.props.config.fieldQuestionMapping.asMutable().map(function (mapping, index) {\n                                                var field = mapping.field;\n                                                var question = mapping.question;\n                                                return jimu_core_1.jsx(\"div\", { key: field + '_' + question + '_' + index, className: \"mapping-container\" }, _this.state.editMapping && _this.state.editMapping.index === index ?\n                                                    jimu_core_1.jsx(jimu_core_1.React.Fragment, null,\n                                                        jimu_core_1.jsx(jimu_ui_1.Select, { value: _this.state.editMapping.field || '', style: { marginBottom: '8px' }, onChange: function (e) { return _this.changeEditMapping('field', e); } }, _this.state.dsFeatureLayerFields.map(function (field) {\n                                                            return jimu_core_1.jsx(\"option\", { key: 'edit_' + field.name + '_' + index, value: field.name }, field.alias || field.name);\n                                                        })),\n                                                        jimu_core_1.jsx(jimu_ui_1.Select, { value: _this.state.editMapping.question || '', onChange: function (e) { return _this.changeEditMapping('question', e); } }, _this.state.surveyQuestionFields.length > 0 &&\n                                                            _this.state.surveyQuestionFields.map(function (question) {\n                                                                return jimu_core_1.jsx(\"option\", { key: 'edit_' + question.name + '_' + index, value: question.name }, question.label);\n                                                            })),\n                                                        jimu_core_1.jsx(\"div\", { className: \"btn-group\" },\n                                                            jimu_core_1.jsx(jimu_ui_1.Button, { className: \"float-left icon-remove-mapping\", type: \"primary\", color: \"primary\", onClick: function () { _this.deleteConnection(index); _this.setState({ editMapping: null }); } },\n                                                                jimu_core_1.jsx(jimu_ui_1.Icon, { size: \"16\", style: { marginLeft: '0', marginRight: '0' }, icon: _this.iconRemove })),\n                                                            jimu_core_1.jsx(jimu_ui_1.Button, { className: \"w-25 float-right\", type: \"secondary\", onClick: function () { _this.setState({ editMapping: null }); } }, _this.nls('cancel')),\n                                                            jimu_core_1.jsx(jimu_ui_1.Button, { className: \"w-25 float-right\", type: \"primary\", color: \"primary\", onClick: function () { _this.editMapping(index); _this.setState({ editMapping: null }); } }, _this.nls('ok'))))\n                                                    :\n                                                        jimu_core_1.jsx(jimu_core_1.React.Fragment, null,\n                                                            jimu_core_1.jsx(\"div\", { className: \"link-info\", onClick: function (e) { return _this.showEditMappingPanel(index, e); } },\n                                                                jimu_core_1.jsx(\"p\", null, _this.getFielAlias(field)),\n                                                                jimu_core_1.jsx(\"div\", { className: \"center-line\" },\n                                                                    jimu_core_1.jsx(\"div\", { className: \"connect\" },\n                                                                        jimu_core_1.jsx(jimu_ui_1.Icon, { size: \"16\", icon: _this.iconLink }))),\n                                                                jimu_core_1.jsx(\"p\", null, _this.getQuestionLabel(question)),\n                                                                jimu_core_1.jsx(\"div\", { className: \"delete-connect\", onClick: function (e) { return _this.deleteConnection(index, e); } },\n                                                                    jimu_core_1.jsx(jimu_ui_1.Icon, { size: \"12\", icon: _this.iconRemove })))));\n                                            })) : '',\n                                        this.state.addMapping && this.state.dsFeatureLayer && this.state.dsFeatureLayerFields && this.state.dsFeatureLayerFields.length > 0 &&\n                                            jimu_core_1.jsx(\"div\", { className: \"mapping-container\" },\n                                                jimu_core_1.jsx(jimu_ui_1.Select, { value: this.state.addMapping.field || 'null', style: { marginBottom: '8px' }, onChange: function (e) { return _this.addMapppingChange('field', e); } },\n                                                    jimu_core_1.jsx(\"option\", { key: 'add_field_default', value: \"null\" }, this.nls('addConnSelectField')),\n                                                    this.state.dsFeatureLayerFields.map(function (field) {\n                                                        return jimu_core_1.jsx(\"option\", { key: 'add_' + field.name, value: field.name }, field.alias || field.name);\n                                                    })),\n                                                jimu_core_1.jsx(jimu_ui_1.Select, { value: this.state.addMapping.question || 'null', onChange: function (e) { return _this.addMapppingChange('question', e); } },\n                                                    jimu_core_1.jsx(\"option\", { key: 'add_question_default', value: \"null\" }, this.nls('addConnSelectQuestion')),\n                                                    this.state.surveyQuestionFields.length > 0 &&\n                                                        this.state.surveyQuestionFields.map(function (question) {\n                                                            return jimu_core_1.jsx(\"option\", { key: 'add_' + question.name, value: question.name }, question.label);\n                                                        })),\n                                                jimu_core_1.jsx(\"div\", { className: \"btn-group\" },\n                                                    jimu_core_1.jsx(jimu_ui_1.Button, { className: \"w-25 float-right\", type: \"secondary\", onClick: this.deactiveAddFieldQuestionConnPanel }, this.nls('cancel')),\n                                                    jimu_core_1.jsx(jimu_ui_1.Button, { className: \"w-25 float-right\", type: \"primary\", disabled: !this.state.addMapping.field || this.state.addMapping.field === 'null' || !this.state.addMapping.question || this.state.addMapping.question === 'null', onClick: this.addFieldQuestionConn }, this.nls('ok'))))) : '',\n                                jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                                    jimu_core_1.jsx(jimu_ui_1.Button, { className: \"w-100\", type: \"primary\", \n                                        // eslint-disable-next-line max-len\n                                        disabled: this.state.addMapping !== null || this.state.editMapping !== null || !(this.props.useMapWidgetIds && this.props.useMapWidgetIds.length && this.props.config && this.props.config.layerViewInfo && this.props.config.layerViewInfo.datasourceId), onClick: this.activeAddFieldQuestionConnPanel }, this.nls('addConnBtn')))) :\n                            jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                                jimu_core_1.jsx(\"span\", null, this.nls('sendDataDisabled1')))))),\n            jimu_core_1.jsx(\"div\", { className: \"survey123__section\", style: (this.state.mode.indexOf('confirmResetSurvey') !== -1) ?\n                    { display: 'block' }\n                    : { display: 'none' } },\n                jimu_core_1.jsx(setting_components_1.SettingSection, { title: this.nls('resetSurveyLabel') },\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null, this.props.intl.formatMessage({ id: 'resetSurveyTip', defaultMessage: default_1.default.resetSurveyTip })),\n                    this.props.intl.formatMessage({ id: 'confirmResetSurveyTip', defaultMessage: default_1.default.confirmResetSurveyTip }),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null),\n                    jimu_core_1.jsx(setting_components_1.SettingRow, null,\n                        jimu_core_1.jsx(jimu_ui_1.Button, { type: \"primary\", onClick: function () { return _this.resetSurvey(); } }, jimu_core_1.defaultMessages.yes),\n                        jimu_core_1.jsx(jimu_ui_1.Button, { onClick: function () { return _this.showSettingPage(); } }, jimu_core_1.defaultMessages.no)))),\n            jimu_core_1.jsx(jimu_ui_1.Modal, { isOpen: this.state.modalIsOpen, className: \"w-100 h-100 p-0 m-0\", css: jimu_core_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n          z-index: 100000;\\n          overflow: hidden;\\n          max-width: 100% !important;\\n          .modal-content{\\n            width: 100%;\\n            height: 100%;\\n          }\\n        \"], [\"\\n          z-index: 100000;\\n          overflow: hidden;\\n          max-width: 100% !important;\\n          .modal-content{\\n            width: 100%;\\n            height: 100%;\\n          }\\n        \"]))) },\n                jimu_core_1.jsx(\"div\", { style: {\n                        width: '100%',\n                        height: '80px',\n                        padding: '23px 60px 23px 30px',\n                        color: '#ffffff',\n                        backgroundColor: '#000000'\n                    } },\n                    jimu_core_1.jsx(\"p\", { style: {\n                            fontSize: '24px',\n                            marginBottom: 0,\n                            lineHeight: '33px'\n                        } }, this.props.intl.formatMessage({ id: 'editSurveyBtn', defaultMessage: default_1.default.editSurveyBtn })),\n                    jimu_core_1.jsx(\"button\", { color: \"primary\", onClick: this.handleCloseModal, style: {\n                            position: 'absolute',\n                            top: '28px',\n                            right: '30px',\n                            // fontSize: '30px',\n                            backgroundColor: '#000000',\n                            color: '#ffffff',\n                            border: '0px',\n                            cursor: 'pointer',\n                            padding: 0\n                        } },\n                        jimu_core_1.jsx(jimu_ui_1.Icon, { size: \"24\", icon: this.closeIcon24 }))),\n                jimu_core_1.jsx(\"iframe\", { id: \"survey123-designer\", width: \"100%\", style: {\n                        height: 'calc(100% - 90px)',\n                        width: '100%',\n                        border: '0px'\n                    } })));\n    };\n    return Setting;\n}(jimu_for_builder_1.BaseWidgetSetting));\nexports.default = Setting;\nvar templateObject_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./your-extensions/widgets/survey/src/setting/setting.tsx\n");

/***/ }),

/***/ "./your-extensions/widgets/survey/src/setting/translations/default.ts":
/*!****************************************************************************!*\
  !*** ./your-extensions/widgets/survey/src/setting/translations/default.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    chooseSurvey: 'Select which survey to run in the widget:',\n    createNewSurveyLabel: 'Create new survey',\n    chooseSurveyLabel: 'Select existing survey',\n    selectSurveyTip: 'Please select',\n    surveyDetailLabel: 'Survey Details:',\n    currentSurveyLabel: 'Current survey',\n    resetSurveyLabel: 'Reset survey',\n    summaryLabel: 'Summary',\n    insertLabel: 'Insert',\n    surveyTitleLabel: 'Name',\n    surveyTitleRequiredMsg: 'The name of the survey is required.',\n    surveyTitleDuplicateMsg: 'A survey with this name already exists, please use a different name.',\n    surveyTagLabel: 'Tags',\n    surveyTagHint: 'Separate tags with commas',\n    surveyTagsRequiredMsg: 'One or more tags are required.',\n    surveySummaryLabel: 'Summary',\n    createSurveyBtn: 'Create',\n    editSurveyBtn: 'Edit survey',\n    appearanceTitle: 'Appearance',\n    showOptionsBarLabel: 'Show options bar',\n    showOptionsHeaderLabel: 'Show survey header',\n    showOptionsDesLabel: 'Show survey description',\n    showOptionsFooterLabel: 'Show survey footer',\n    useSurveyTheme: 'Enable survey theme',\n    resetSurveyTip: 'Reset survey will remove all settings to this survey widget.',\n    confirmResetSurveyTip: 'Are you sure you want to continue?',\n    sendDataToSurveyTitle: 'Send data to this survey',\n    sendDataToSurveyDesc: 'Attributes and geometry of a feature in the source layer can be sent to survey questions.',\n    sendDataDisabled1: 'Please add a map widget that contains at least one feature layer to use this capability.',\n    sourceLayer: 'Source layer',\n    selectSourceWidget: 'Select an interactive map',\n    selectSourceLayer: 'Select the source layer',\n    triggerEventListTitle: 'Trigger event for sending data',\n    triggerEventSelect: 'When an existing feature is selected',\n    triggerEventAdd: 'When a new feature is added',\n    triggerEventDesc1: 'Data will be sent to this survey when a feature is selected in the layer.',\n    addConnTitle: 'Field/question connections',\n    addConnSelectField: 'Select a field',\n    addConnSelectQuestion: 'Select a survey question',\n    addConnFailed1: 'The survey question type is not compatible with the field type.',\n    addConnBtn: 'Add connection',\n    geometryLabel: '*Shape',\n    geometryTypePoint: 'Point',\n    geometryTypeMultiPoint: 'MultiPoint',\n    geometryTypePolyline: 'Polyline',\n    geometryTypePolygon: 'Polygon'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi95b3VyLWV4dGVuc2lvbnMvd2lkZ2V0cy9zdXJ2ZXkvc3JjL3NldHRpbmcvdHJhbnNsYXRpb25zL2RlZmF1bHQudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi95b3VyLWV4dGVuc2lvbnMvd2lkZ2V0cy9zdXJ2ZXkvc3JjL3NldHRpbmcvdHJhbnNsYXRpb25zL2RlZmF1bHQudHM/ZTNiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XHJcbiAgY2hvb3NlU3VydmV5OiAnU2VsZWN0IHdoaWNoIHN1cnZleSB0byBydW4gaW4gdGhlIHdpZGdldDonLFxyXG4gIGNyZWF0ZU5ld1N1cnZleUxhYmVsOiAnQ3JlYXRlIG5ldyBzdXJ2ZXknLFxyXG4gIGNob29zZVN1cnZleUxhYmVsOiAnU2VsZWN0IGV4aXN0aW5nIHN1cnZleScsXHJcbiAgc2VsZWN0U3VydmV5VGlwOiAnUGxlYXNlIHNlbGVjdCcsXHJcbiAgc3VydmV5RGV0YWlsTGFiZWw6ICdTdXJ2ZXkgRGV0YWlsczonLFxyXG4gIGN1cnJlbnRTdXJ2ZXlMYWJlbDogJ0N1cnJlbnQgc3VydmV5JyxcclxuICByZXNldFN1cnZleUxhYmVsOiAnUmVzZXQgc3VydmV5JyxcclxuICBzdW1tYXJ5TGFiZWw6ICdTdW1tYXJ5JyxcclxuICBpbnNlcnRMYWJlbDogJ0luc2VydCcsXHJcbiAgc3VydmV5VGl0bGVMYWJlbDogJ05hbWUnLFxyXG4gIHN1cnZleVRpdGxlUmVxdWlyZWRNc2c6ICdUaGUgbmFtZSBvZiB0aGUgc3VydmV5IGlzIHJlcXVpcmVkLicsXHJcbiAgc3VydmV5VGl0bGVEdXBsaWNhdGVNc2c6ICdBIHN1cnZleSB3aXRoIHRoaXMgbmFtZSBhbHJlYWR5IGV4aXN0cywgcGxlYXNlIHVzZSBhIGRpZmZlcmVudCBuYW1lLicsXHJcbiAgc3VydmV5VGFnTGFiZWw6ICdUYWdzJyxcclxuICBzdXJ2ZXlUYWdIaW50OiAnU2VwYXJhdGUgdGFncyB3aXRoIGNvbW1hcycsXHJcbiAgc3VydmV5VGFnc1JlcXVpcmVkTXNnOiAnT25lIG9yIG1vcmUgdGFncyBhcmUgcmVxdWlyZWQuJyxcclxuICBzdXJ2ZXlTdW1tYXJ5TGFiZWw6ICdTdW1tYXJ5JyxcclxuICBjcmVhdGVTdXJ2ZXlCdG46ICdDcmVhdGUnLFxyXG4gIGVkaXRTdXJ2ZXlCdG46ICdFZGl0IHN1cnZleScsXHJcbiAgYXBwZWFyYW5jZVRpdGxlOiAnQXBwZWFyYW5jZScsXHJcbiAgc2hvd09wdGlvbnNCYXJMYWJlbDogJ1Nob3cgb3B0aW9ucyBiYXInLFxyXG4gIHNob3dPcHRpb25zSGVhZGVyTGFiZWw6ICdTaG93IHN1cnZleSBoZWFkZXInLFxyXG4gIHNob3dPcHRpb25zRGVzTGFiZWw6ICdTaG93IHN1cnZleSBkZXNjcmlwdGlvbicsXHJcbiAgc2hvd09wdGlvbnNGb290ZXJMYWJlbDogJ1Nob3cgc3VydmV5IGZvb3RlcicsXHJcbiAgdXNlU3VydmV5VGhlbWU6ICdFbmFibGUgc3VydmV5IHRoZW1lJyxcclxuICByZXNldFN1cnZleVRpcDogJ1Jlc2V0IHN1cnZleSB3aWxsIHJlbW92ZSBhbGwgc2V0dGluZ3MgdG8gdGhpcyBzdXJ2ZXkgd2lkZ2V0LicsXHJcbiAgY29uZmlybVJlc2V0U3VydmV5VGlwOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGNvbnRpbnVlPycsXHJcbiAgc2VuZERhdGFUb1N1cnZleVRpdGxlOiAnU2VuZCBkYXRhIHRvIHRoaXMgc3VydmV5JyxcclxuICBzZW5kRGF0YVRvU3VydmV5RGVzYzogJ0F0dHJpYnV0ZXMgYW5kIGdlb21ldHJ5IG9mIGEgZmVhdHVyZSBpbiB0aGUgc291cmNlIGxheWVyIGNhbiBiZSBzZW50IHRvIHN1cnZleSBxdWVzdGlvbnMuJyxcclxuICBzZW5kRGF0YURpc2FibGVkMTogJ1BsZWFzZSBhZGQgYSBtYXAgd2lkZ2V0IHRoYXQgY29udGFpbnMgYXQgbGVhc3Qgb25lIGZlYXR1cmUgbGF5ZXIgdG8gdXNlIHRoaXMgY2FwYWJpbGl0eS4nLFxyXG4gIHNvdXJjZUxheWVyOiAnU291cmNlIGxheWVyJyxcclxuICBzZWxlY3RTb3VyY2VXaWRnZXQ6ICdTZWxlY3QgYW4gaW50ZXJhY3RpdmUgbWFwJyxcclxuICBzZWxlY3RTb3VyY2VMYXllcjogJ1NlbGVjdCB0aGUgc291cmNlIGxheWVyJyxcclxuICB0cmlnZ2VyRXZlbnRMaXN0VGl0bGU6ICdUcmlnZ2VyIGV2ZW50IGZvciBzZW5kaW5nIGRhdGEnLFxyXG4gIHRyaWdnZXJFdmVudFNlbGVjdDogJ1doZW4gYW4gZXhpc3RpbmcgZmVhdHVyZSBpcyBzZWxlY3RlZCcsXHJcbiAgdHJpZ2dlckV2ZW50QWRkOiAnV2hlbiBhIG5ldyBmZWF0dXJlIGlzIGFkZGVkJyxcclxuICB0cmlnZ2VyRXZlbnREZXNjMTogJ0RhdGEgd2lsbCBiZSBzZW50IHRvIHRoaXMgc3VydmV5IHdoZW4gYSBmZWF0dXJlIGlzIHNlbGVjdGVkIGluIHRoZSBsYXllci4nLFxyXG4gIGFkZENvbm5UaXRsZTogJ0ZpZWxkL3F1ZXN0aW9uIGNvbm5lY3Rpb25zJyxcclxuICBhZGRDb25uU2VsZWN0RmllbGQ6ICdTZWxlY3QgYSBmaWVsZCcsXHJcbiAgYWRkQ29ublNlbGVjdFF1ZXN0aW9uOiAnU2VsZWN0IGEgc3VydmV5IHF1ZXN0aW9uJyxcclxuICBhZGRDb25uRmFpbGVkMTogJ1RoZSBzdXJ2ZXkgcXVlc3Rpb24gdHlwZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIHRoZSBmaWVsZCB0eXBlLicsXHJcbiAgYWRkQ29ubkJ0bjogJ0FkZCBjb25uZWN0aW9uJyxcclxuICBnZW9tZXRyeUxhYmVsOiAnKlNoYXBlJyxcclxuICBnZW9tZXRyeVR5cGVQb2ludDogJ1BvaW50JyxcclxuICBnZW9tZXRyeVR5cGVNdWx0aVBvaW50OiAnTXVsdGlQb2ludCcsXHJcbiAgZ2VvbWV0cnlUeXBlUG9seWxpbmU6ICdQb2x5bGluZScsXHJcbiAgZ2VvbWV0cnlUeXBlUG9seWdvbjogJ1BvbHlnb24nXHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./your-extensions/widgets/survey/src/setting/translations/default.ts\n");

/***/ }),

/***/ "jimu-arcgis":
/*!******************************!*\
  !*** external "jimu-arcgis" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_arcgis__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamltdS1hcmNnaXMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqaW11LWFyY2dpc1wiPzlmMWMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ppbXVfYXJjZ2lzX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///jimu-arcgis\n");

/***/ }),

/***/ "jimu-core":
/*!****************************!*\
  !*** external "jimu-core" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_core__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamltdS1jb3JlLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiamltdS1jb3JlXCI/YzY5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfamltdV9jb3JlX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///jimu-core\n");

/***/ }),

/***/ "jimu-for-builder":
/*!***********************************!*\
  !*** external "jimu-for-builder" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_for_builder__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamltdS1mb3ItYnVpbGRlci5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImppbXUtZm9yLWJ1aWxkZXJcIj8xY2IyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9qaW11X2Zvcl9idWlsZGVyX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///jimu-for-builder\n");

/***/ }),

/***/ "jimu-ui":
/*!**************************!*\
  !*** external "jimu-ui" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_ui__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamltdS11aS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImppbXUtdWlcIj8zNTQzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9qaW11X3VpX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///jimu-ui\n");

/***/ }),

/***/ "jimu-ui/setting-components":
/*!*********************************************!*\
  !*** external "jimu-ui/setting-components" ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_ui_setting_components__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamltdS11aS9zZXR0aW5nLWNvbXBvbmVudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqaW11LXVpL3NldHRpbmctY29tcG9uZW50c1wiPzYyYmEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ppbXVfdWlfc2V0dGluZ19jb21wb25lbnRzX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///jimu-ui/setting-components\n");

/***/ })

/******/ })});;
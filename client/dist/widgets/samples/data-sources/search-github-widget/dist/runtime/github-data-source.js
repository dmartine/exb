define(["jimu-core"],function(t){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=716)}({2:function(e,r){e.exports=t},716:function(t,e,r){"use strict";var n=this&&this.__extends||function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(e,"__esModule",{value:!0});var o,u=r(2);!function(t){t.GitHubRepository="GITHUB_REPOSITORY"}(o=e.DataSourceTypes||(e.DataSourceTypes={}));var i=function(){function t(){}return t.prototype.createDataSource=function(t){var e=t.dataSourceJson;if(e.type===o.GitHubRepository)return new c(t);console.error("Unimplemented data source type.",e.type)},t}();e.default=i;var c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return n(e,t),e.prototype.doQuery=function(t){var e=this;return window.fetch(this.url+"?q="+t).then(function(t){return t.json()}).then(function(t){return t.items.map(function(t){return new u.SimpleDataRecord(t,e)})})},e.prototype.doQueryById=function(t){return Promise.reject("todo: query by id")},e.prototype.mergeQuery=function(t,e){return null},e.prototype.setJsonData=function(t){var e=this;this.records=t.map(function(t){return new u.SimpleDataRecord(t,e)})},e.prototype.doAdd=function(t){return Promise.resolve(t)},e}(u.AbstractQueriableDataSource);e.GithubRepositoryDataSource=c}})});
//# sourceMappingURL=github-data-source.js.map
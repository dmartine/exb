/// <reference types="lodash" />
import * as React from 'react';
import * as ReactDOM from 'react-dom';
import * as ReactRedux from 'react-redux';
import * as queryString from 'query-string';
import Immutable = require('seamless-immutable');
import * as classNames from 'classnames';
import * as uuidv1 from 'uuid/v1';
import * as emotionCore from '@emotion/core';
import styled from '@emotion/styled';
import { SerializedStyles } from '@emotion/serialize';
import invariant = require('invariant');
import * as restAuth from '@esri/arcgis-rest-auth';
import * as restFeatureLayer from '@esri/arcgis-rest-feature-layer';
import * as restRequest from '@esri/arcgis-rest-request';
import * as restPortal from '@esri/arcgis-rest-portal';
import * as appActions from './lib/app-actions';
import * as utils from './lib/utils/utils';
import * as urlUtils from './lib/utils/url-utils';
import * as portalUrlUtils from './lib/utils/portal-url-utils';
import * as appConfigUtils from './lib/utils/app-config-utils';
import * as themeUtils from './lib/utils/theme-utils';
import * as keyboardUtils from './lib/utils/keyboard-utils';
import * as extensionSpec from './lib/extension-spec/extension-spec';
import * as moduleLoader from './lib/module-loader';
import * as jimuHistory from './lib/browser-history';
import * as i18n from './lib/i18n';
import { FormattedDate, FormattedHTMLMessage, FormattedMessage, FormattedNumber, FormattedPlural, FormattedRelative, FormattedTime, InjectedIntl, IntlProvider, injectIntl } from 'react-intl';
import { RepeatedDataSourceProvider, withRepeatedDataSource, RepeatedDataSource } from './lib/repeat-data-source-context';
import * as dataSourceUtils from './lib/data-source/utils';
import * as CONSTANTS from './lib/constants';
import I18NManager from './lib/i18n-manager';
import BaseWidget from './lib/base-widget';
import WidgetManager from './lib/widget-manager';
import ConfigManager from './lib/config-manager';
import DataSourceManager from './lib/data-source-manager';
import MessageManager from './lib/message-manager';
import SessionManager from './lib/session-manager';
import ExtensionManager from './lib/extension-manager';
import DataActionManager from './lib/data-action-manager';
import ThemeManager from './lib/theme-manager';
import AppRoot from './lib/app-root';
import defaultMessages from './lib/translations/default';
import MutableStoreManager from './lib/mutable-store-manager';
import DataSourceComponent, { DataSourceComponentInner, DataSourceComponentProps, DataSourceComponentStateProps } from './lib/data-source-component';
import DataQueryComponent from './lib/data-query-component';
import MultipleDataSourceComponent, { MultipleDataSourceComponentProps } from './lib/multiple-data-source-component';
import Keyboard from './lib/keyboard';
import AppKeyboardComponent from './lib/app-keyboard-component';
declare const lodash: {
    getValue: {
        <TObject extends object, TKey extends keyof TObject>(object: TObject, path: TKey | [TKey]): TObject[TKey];
        <TObject extends object, TKey extends keyof TObject>(object: TObject, path: TKey | [TKey]): TObject[TKey];
        <TObject extends object, TKey extends keyof TObject, TDefault>(object: TObject, path: TKey | [TKey], defaultValue: TDefault): TDefault | TObject[TKey];
        <T>(object: import("lodash").NumericDictionary<T>, path: number): T;
        <T>(object: import("lodash").NumericDictionary<T>, path: number): T;
        <T, TDefault>(object: import("lodash").NumericDictionary<T>, path: number, defaultValue: TDefault): T | TDefault;
        <TDefault>(object: null, path: import("lodash").Many<string | number | symbol>, defaultValue: TDefault): TDefault;
        (object: null, path: import("lodash").Many<string | number | symbol>): undefined;
        (object: any, path: import("lodash").Many<string | number | symbol>, defaultValue?: any): any;
    };
    assign: {
        <TObject, TSource>(object: TObject, source: TSource): TObject & TSource;
        <TObject, TSource1, TSource2>(object: TObject, source1: TSource1, source2: TSource2): TObject & TSource1 & TSource2;
        <TObject, TSource1, TSource2, TSource3>(object: TObject, source1: TSource1, source2: TSource2, source3: TSource3): TObject & TSource1 & TSource2 & TSource3;
        <TObject, TSource1, TSource2, TSource3, TSource4>(object: TObject, source1: TSource1, source2: TSource2, source3: TSource3, source4: TSource4): TObject & TSource1 & TSource2 & TSource3 & TSource4;
        <TObject>(object: TObject): TObject;
        (object: any, ...otherArgs: any[]): any;
    };
    defer: any;
    debounce: any;
    setValue: any;
    isDeepEqual: (value: any, other: any) => boolean;
    cloneDeep: <T>(value: T) => T;
    throttle: any;
};
declare const esri: {
    restAuth: typeof restAuth;
    restFeatureLayer: typeof restFeatureLayer;
    restPortal: typeof restPortal;
    restRequest: typeof restRequest;
    sanitizer: any;
};
declare const polished: {
    /**
     * https://github.com/styled-components/polished/issues/276
     * The typeing of polished is not correct. It says it's fixed but it seems it does not.
     */
    rgba: any;
    rem: any;
    readableColor: any;
    darken: any;
    ellipsis: any;
    mix: any;
    stripUnit: any;
    math: any;
    getValueAndUnit: any;
    borderRadius: any;
};
declare type ImmutableObject<T> = Immutable.ImmutableObject<T>;
declare type ImmutableArray<T> = Immutable.ImmutableArray<T>;
declare const jsx: typeof React.createElement;
declare const css: typeof emotionCore.css;
declare const Global: typeof emotionCore.Global;
export { AppRoot, React, ReactDOM, ExtensionManager, BaseWidget, WidgetManager, ConfigManager, DataSourceManager, urlUtils, SessionManager, appActions, extensionSpec, utils, appConfigUtils, themeUtils, ReactRedux, I18NManager, MessageManager, Immutable, classNames, uuidv1, queryString, moduleLoader, jimuHistory, ImmutableObject, ImmutableArray, portalUrlUtils, i18n, defaultMessages, DataSourceComponent, DataSourceComponentInner, DataSourceComponentProps, DataSourceComponentStateProps, MultipleDataSourceComponent, MultipleDataSourceComponentProps, DataQueryComponent, IntlProvider, injectIntl, jsx, css, Global, SerializedStyles, styled, polished, MutableStoreManager, Keyboard, AppKeyboardComponent, keyboardUtils, FormattedDate, FormattedHTMLMessage, FormattedMessage, FormattedNumber, FormattedPlural, FormattedRelative, FormattedTime, InjectedIntl, esri, lodash, RepeatedDataSourceProvider, withRepeatedDataSource, RepeatedDataSource, dataSourceUtils, DataActionManager, ThemeManager, invariant, CONSTANTS };
export * from './lib/types/layout';
export * from './lib/types/props';
export * from './lib/types/state';
export * from './lib/types/app-config';
export * from './lib/types/jimu-config';
export * from './lib/types/url-parameters';
export * from './lib/types/app-info';
export * from './lib/types/manifest';
export * from './lib/types/common';
export * from './lib/types/tracking-manager';
export * from './lib/types/theme';
export * from './lib/types/expression';
export * from './lib/data-source/ds-base-types';
export * from './lib/data-source/feature-record';
export * from './lib/data-source/feature-query-data-source';
export * from './lib/message/message-base-types';
export * from './lib/init';
export * from './lib/store';
export * from './lib/tracking-manager';
export { LoadingHandler } from './lib/loading-component';
export * from './lib/dependency-loader';
export * from './lib/arcgis-js-api-module-loader';
export * from './lib/error-boundary';
export * from './lib/base-data-action';
export * from './lib/message-actions/filter-data-record-action';
export * from './lib/expression-resolver';
